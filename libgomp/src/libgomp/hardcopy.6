testsuite/libgomp.c++/for-5.C:185:#pragma omp parallel shared (i)
testsuite/libgomp.c++/for-5.C:186:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/for-5.C:198:#pragma omp parallel for lastprivate (i9)
testsuite/libgomp.c++/for-5.C:209:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:219:#pragma omp parallel
testsuite/libgomp.c++/for-5.C:220:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/for-5.C:231:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/reduction-1.C:9:#pragma omp parallel num_threads(4) reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c++/reduction-1.C:12:#pragma omp atomic
testsuite/libgomp.c++/reduction-1.C:16:#pragma omp atomic
testsuite/libgomp.c++/simd-9.C:8:#pragma omp declare reduction (foo:int:omp_out += omp_in) \
testsuite/libgomp.c++/simd-9.C:15:  #pragma omp simd aligned(a : 32) reduction(foo:u) reduction(+:v)
testsuite/libgomp.c++/simd-9.C:28:  #pragma omp simd aligned(a : 32) reduction(foo:u) reduction(+:v) \
testsuite/libgomp.c++/atomic-4.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:16:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-4.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:22:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-4.C:24:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:28:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:32:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:36:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:40:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:44:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:48:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:52:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:59:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:63:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:67:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:71:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:78:#pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:81:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:85:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:89:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:93:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:100:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:103:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:107:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-4.C:109:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:113:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-4.C:115:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:119:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:123:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:127:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:131:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:135:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:139:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:143:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:147:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:151:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:14:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:18:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-7.C:20:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-7.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:24:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:28:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:33:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:40:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:45:  #pragma omp atomic capture
testsuite/libgomp.c++/pr24455.C:9:#pragma omp threadprivate(i)
testsuite/libgomp.c++/pr24455.C:15:#pragma omp parallel default(none) num_threads(10) copyin(i)
testsuite/libgomp.c++/pr24455.C:18:#pragma omp barrier
testsuite/libgomp.c++/cancel-sections-1.C:12:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c++/cancel-sections-1.C:15:    #pragma omp sections
testsuite/libgomp.c++/cancel-sections-1.C:19:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:22:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:25:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:28:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:31:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:34:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:37:     #pragma omp cancel sections
testsuite/libgomp.c++/task-7.C:15:  #pragma omp task firstprivate (a)
testsuite/libgomp.c++/loop-9.C:16:#pragma omp atomic
testsuite/libgomp.c++/loop-9.C:34:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:38:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:46:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:54:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:60:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:66:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:75:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:102:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:106:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:114:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:122:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:128:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:134:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:143:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:170:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:174:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:182:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:190:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:196:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:202:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:211:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:238:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:242:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:250:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:258:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:264:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:270:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:279:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:306:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:310:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:318:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:326:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:332:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:338:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:347:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/udr-3.C:23:    #pragma omp declare reduction (foo : U<0>, S : omp_out.foo (omp_in, false))
testsuite/libgomp.c++/udr-3.C:24:    #pragma omp declare reduction (foo : int : omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:26:    #pragma omp declare reduction (foo : double : omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:35:      #pragma omp parallel num_threads (4) reduction (foo : s, v, d) \
testsuite/libgomp.c++/udr-3.C:53:  #pragma omp declare reduction (bar : S<1> : omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-3.C:74:    #pragma omp parallel num_threads (4) reduction (foo:s) \
testsuite/libgomp.c++/udr-3.C:95:  #pragma omp declare reduction (baz: T: omp_out.s += omp_in.s) \
testsuite/libgomp.c++/udr-3.C:97:  #pragma omp declare reduction (baz: D: omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:107:    #pragma omp declare reduction (+ : V, W : omp_out.v -= omp_in.v) \
testsuite/libgomp.c++/udr-3.C:110:      #pragma omp declare reduction (+ : W, V : omp_out.v += omp_in.v) \
testsuite/libgomp.c++/udr-3.C:112:      #pragma omp parallel num_threads (4) reduction (+: v, q) \
testsuite/libgomp.c++/udr-3.C:140:  #pragma omp parallel num_threads (4) reduction (bar:s) reduction (+:q)
testsuite/libgomp.c++/copyin-2.C:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c++/copyin-2.C:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c++/copyin-2.C:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c++/for-1.C:103:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:112:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-1.C:121:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:131:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-1.C:139:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:148:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:160:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:170:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:179:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:189:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:198:#pragma omp parallel
testsuite/libgomp.c++/for-1.C:200:#pragma omp for nowait
testsuite/libgomp.c++/for-1.C:203:#pragma omp single
testsuite/libgomp.c++/for-1.C:216:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:228:#pragma omp parallel for
testsuite/libgomp.c++/task-6.C:10:#pragma omp task private(j, m) shared(k, n)
testsuite/libgomp.c++/task-6.C:15:      #pragma omp atomic
testsuite/libgomp.c++/task-6.C:18:#pragma omp taskwait
testsuite/libgomp.c++/task-6.C:31:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c++/task-6.C:33:  #pragma omp section
testsuite/libgomp.c++/task-6.C:37:      #pragma omp task
testsuite/libgomp.c++/task-6.C:42:      #pragma omp taskwait
testsuite/libgomp.c++/task-6.C:56:#pragma omp task private(j, m) shared(k, n) untied
testsuite/libgomp.c++/task-6.C:61:      #pragma omp atomic
testsuite/libgomp.c++/task-6.C:64:#pragma omp taskwait
testsuite/libgomp.c++/task-6.C:77:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/task-6.C:79:    #pragma omp master
testsuite/libgomp.c++/loop-6.C:15:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/pr30703.C:20:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:27:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:33:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:41:#pragma omp parallel for firstprivate (a) lastprivate (a) private (b) schedule (static, 1) num_threads (5)
testsuite/libgomp.c++/pr30703.C:46:     #pragma omp atomic
testsuite/libgomp.c++/task-8.C:12:#pragma omp parallel shared(errval)
testsuite/libgomp.c++/task-8.C:15:      #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:17:    #pragma omp task if (0) shared(errval)
testsuite/libgomp.c++/task-8.C:20:        #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:22:      #pragma omp task if (0) shared(errval)
testsuite/libgomp.c++/task-8.C:24:          #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:27:    #pragma omp task final (1) shared(errval)
testsuite/libgomp.c++/task-8.C:30:        #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:32:      #pragma omp taskyield
testsuite/libgomp.c++/task-8.C:33:      #pragma omp taskwait
testsuite/libgomp.c++/task-8.C:34:      #pragma omp task shared(errval)
testsuite/libgomp.c++/task-8.C:36:          #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:40:  #pragma omp atomic read
testsuite/libgomp.c++/udr-1.C:31:#pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-1.C:33:#pragma omp declare reduction (foo: char, int, short: omp_out += omp_in - 4) \
testsuite/libgomp.c++/udr-1.C:35:#pragma omp declare reduction (+: S: omp_out.foo (omp_in, false)) \
testsuite/libgomp.c++/udr-1.C:40:  #pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-1.C:53:  #pragma omp declare reduction (foo: S: omp_out.foo (omp_in, true)) \
testsuite/libgomp.c++/udr-1.C:56:    #pragma omp declare reduction (foo: S: omp_out.foo (omp_in, false)) \
testsuite/libgomp.c++/udr-1.C:58:    #pragma omp parallel num_threads (4) reduction (N::operator +: q) \
testsuite/libgomp.c++/ctor-1.C:25:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:31:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:37:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:46:  #pragma omp parallel private(b)
testsuite/libgomp.c++/ctor-1.C:48:      #pragma omp master
testsuite/libgomp.c++/sections-1.C:25:#pragma omp parallel shared(a,b,nthreads) private(c,i,tid)
testsuite/libgomp.c++/sections-1.C:35:  #pragma omp sections nowait
testsuite/libgomp.c++/sections-1.C:37:    #pragma omp section
testsuite/libgomp.c++/sections-1.C:47:    #pragma omp section
testsuite/libgomp.c++/task-1.C:9:#pragma omp task private(j, m) shared(k, n)
testsuite/libgomp.c++/task-1.C:14:      #pragma omp atomic
testsuite/libgomp.c++/task-1.C:17:#pragma omp taskwait
testsuite/libgomp.c++/task-1.C:29:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c++/task-1.C:31:  #pragma omp section
testsuite/libgomp.c++/task-1.C:35:      #pragma omp task
testsuite/libgomp.c++/task-1.C:40:      #pragma omp taskwait
testsuite/libgomp.c++/task-1.C:53:#pragma omp task private(j, m) shared(k, n) untied
testsuite/libgomp.c++/task-1.C:58:      #pragma omp atomic
testsuite/libgomp.c++/task-1.C:61:#pragma omp taskwait
testsuite/libgomp.c++/task-1.C:74:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/task-1.C:76:    #pragma omp master
testsuite/libgomp.c++/for-7.C:21:#pragma omp atomic
testsuite/libgomp.c++/for-7.C:31:#pragma omp atomic
testsuite/libgomp.c++/for-7.C:39:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:48:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:56:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:67:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:76:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:84:#pragma omp parallel for
testsuite/libgomp.c++/collapse-1.C:13:  #pragma omp parallel for collapse(4 - 1) schedule(static, 4)
testsuite/libgomp.c++/collapse-1.C:18:  #pragma omp parallel
testsuite/libgomp.c++/collapse-1.C:20:      #pragma omp for collapse(2) reduction(|:l) private (k)
testsuite/libgomp.c++/reduction-2.C:9:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/reduction-2.C:11:#pragma omp single
testsuite/libgomp.c++/reduction-2.C:18:#pragma omp for reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c++/reduction-2.C:22:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:36:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:39:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:42:#pragma omp atomic
testsuite/libgomp.c++/ctor-9.C:18:#pragma omp threadprivate(threadbase)
testsuite/libgomp.c++/ctor-9.C:34:  #pragma omp parallel
testsuite/libgomp.c++/ctor-9.C:38:      #pragma omp single copyprivate(b)
testsuite/libgomp.c++/atomic-10.C:10:  #pragma omp atomic
testsuite/libgomp.c++/atomic-10.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:16:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-10.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:26:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:30:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:34:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:38:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:42:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:46:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:50:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:54:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:58:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:62:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:66:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:70:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:74:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:78:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:82:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:86:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:90:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:94:  #pragma omp atomic read
testsuite/libgomp.c++/cancel-for-2.C:12:  #pragma omp parallel num_threads (32) shared (v, w) private (c, d) firstprivate (e)
testsuite/libgomp.c++/cancel-for-2.C:18:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:24:        #pragma omp cancel for if (x[0])
testsuite/libgomp.c++/cancel-for-2.C:27:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:33:        #pragma omp cancel for if (x[1])
testsuite/libgomp.c++/cancel-for-2.C:34:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:37:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:43:        #pragma omp cancel for if (x[2])
testsuite/libgomp.c++/cancel-for-2.C:44:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:47:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:53:        #pragma omp cancel for if (x[3])
testsuite/libgomp.c++/cancel-for-2.C:54:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:60:  #pragma omp parallel num_threads (32) shared (v, w) private (c, d) firstprivate (e)
testsuite/libgomp.c++/cancel-for-2.C:69:    #pragma omp cancel parallel if (omp_get_thread_num () == 1 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:70:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:76:        #pragma omp cancel for if (x[0])
testsuite/libgomp.c++/cancel-for-2.C:79:    #pragma omp cancel parallel if (omp_get_thread_num () == 2 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:80:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:86:        #pragma omp cancel for if (x[1])
testsuite/libgomp.c++/cancel-for-2.C:87:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:90:    #pragma omp cancel parallel if (omp_get_thread_num () == 3 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:91:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:97:        #pragma omp cancel for if (x[2])
testsuite/libgomp.c++/cancel-for-2.C:98:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:101:    #pragma omp cancel parallel if (omp_get_thread_num () == 4 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:102:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:108:       #pragma omp cancel for if (x[3])
testsuite/libgomp.c++/cancel-for-2.C:109:       #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:112:    #pragma omp cancel parallel if (omp_get_thread_num () == 5 && x[4])
testsuite/libgomp.c++/ctor-8.C:24:#pragma omp threadprivate(threadbase)
testsuite/libgomp.c++/ctor-8.C:54:  #pragma omp parallel firstprivate(b)
testsuite/libgomp.c++/udr-6.C:14:#pragma omp declare reduction (+:B:omp_out.b += omp_in.b) \
testsuite/libgomp.c++/udr-6.C:36:  #pragma omp declare reduction (+:A:bar (omp_out, omp_in, 0))
testsuite/libgomp.c++/udr-6.C:41:  #pragma omp declare reduction (+:N1::A:bar (omp_out, omp_in, 1))
testsuite/libgomp.c++/udr-6.C:49:  #pragma omp parallel reduction(+:g, i)
testsuite/libgomp.c++/udr-6.C:59:  #pragma omp parallel reduction (+:b, i)
testsuite/libgomp.c++/simd-8.C:15:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-8.C:16:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-8.C:17:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c++/simd-8.C:24:  #pragma omp parallel for simd aligned(a : 32) reduction(+:s) \
testsuite/libgomp.c++/task-3.C:23:    #pragma omp atomic
testsuite/libgomp.c++/task-3.C:36:    #pragma omp atomic
testsuite/libgomp.c++/task-3.C:48:  #pragma omp task firstprivate (i, a, j, b)
testsuite/libgomp.c++/task-3.C:56:  #pragma omp task firstprivate (i, a, j, b)
testsuite/libgomp.c++/task-3.C:66:  #pragma omp task firstprivate (a, c)
testsuite/libgomp.c++/task-3.C:78:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c++/task-3.C:80:      #pragma omp single
testsuite/libgomp.c++/loop-1.C:24:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:26:#pragma omp for
testsuite/libgomp.c++/loop-1.C:40:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:42:#pragma omp for
testsuite/libgomp.c++/loop-1.C:56:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:58:#pragma omp for
testsuite/libgomp.c++/loop-1.C:72:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:74:#pragma omp for
testsuite/libgomp.c++/atomic-6.C:10:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-6.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-6.C:16:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-6.C:18:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-6.C:20:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:26:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:31:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:38:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:43:  #pragma omp atomic capture
testsuite/libgomp.c++/udr-7.C:22:#pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-7.C:24:#pragma omp declare reduction (bar : S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-7.C:34:  #pragma omp parallel reduction (foo: x) reduction (bar: r) \
testsuite/libgomp.c++/udr-7.C:52:  #pragma omp parallel reduction (foo: x) reduction (bar: y) \
testsuite/libgomp.c++/pr34513.C:16:  #pragma omp parallel num_threads (thrs)
testsuite/libgomp.c++/pr34513.C:20:    #pragma omp atomic
testsuite/libgomp.c++/pr34513.C:23:    #pragma omp barrier
testsuite/libgomp.c++/pr34513.C:26:      #pragma omp atomic
testsuite/libgomp.c++/pr27337.C:21:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:28:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:38:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:48:#pragma omp parallel for firstprivate (ret) lastprivate (ret) \
testsuite/libgomp.c++/pr27337.C:62:#pragma omp parallel for num_threads (4)
testsuite/libgomp.c++/pr27337.C:64:#pragma omp atomic
testsuite/libgomp.c++/loop-3.C:9:#pragma omp barrier
testsuite/libgomp.c++/loop-3.C:10:#pragma omp for lastprivate (a)
testsuite/libgomp.c++/loop-3.C:22:#pragma omp parallel num_threads (64)
testsuite/libgomp.c++/ctor-7.C:27:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:33:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:39:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:48:  #pragma omp parallel private(b)
testsuite/libgomp.c++/ctor-7.C:50:      #pragma omp master
testsuite/libgomp.c++/tls-init1.C:12:#pragma omp threadprivate (a)
testsuite/libgomp.c++/loop-2.C:13:#pragma omp for
testsuite/libgomp.c++/loop-2.C:22:#pragma omp parallel shared(a)
testsuite/libgomp.c++/simd-2.C:13:  #pragma omp simd private (v) safelen(16)
testsuite/libgomp.c++/loop-7.C:10:#pragma omp for
testsuite/libgomp.c++/copyin-1.C:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c++/copyin-1.C:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c++/copyin-1.C:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c++/master-1.C:10:  #pragma omp parallel
testsuite/libgomp.c++/master-1.C:12:    #pragma omp master
testsuite/libgomp.c++/simd-7.C:15:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-7.C:17:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-7.C:19:#pragma omp declare reduction (foo:int:omp_out += omp_in) \
testsuite/libgomp.c++/simd-7.C:27:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u) \
testsuite/libgomp.c++/simd-7.C:45:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u) \
testsuite/libgomp.c++/for-8.C:103:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:112:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-8.C:121:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:131:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-8.C:139:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:148:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:160:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:170:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:179:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:189:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:198:#pragma omp parallel
testsuite/libgomp.c++/for-8.C:200:#pragma omp for nowait
testsuite/libgomp.c++/for-8.C:203:#pragma omp single
testsuite/libgomp.c++/for-8.C:216:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:228:#pragma omp parallel for
testsuite/libgomp.c++/pr38650.C:13:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:19:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:25:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:31:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:37:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:43:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/loop-8.C:11:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:18:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:25:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:32:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:39:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:46:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:53:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:60:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/single-1.C:7:  #pragma omp parallel shared (i)
testsuite/libgomp.c++/single-1.C:9:      #pragma omp single
testsuite/libgomp.c++/atomic-1.C:12:  #pragma omp atomic
testsuite/libgomp.c++/atomic-1.C:19:  #pragma omp atomic
testsuite/libgomp.c++/atomic-1.C:26:  #pragma omp atomic
testsuite/libgomp.c++/atomic-14.C:10:  #pragma omp atomic seq_cst
testsuite/libgomp.c++/atomic-14.C:12:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:16:  #pragma omp atomic seq_cst update
testsuite/libgomp.c++/atomic-14.C:18:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-14.C:22:  #pragma omp atomic seq_cst, capture
testsuite/libgomp.c++/atomic-14.C:26:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:30:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:34:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-14.C:38:  #pragma omp atomic seq_cst read
testsuite/libgomp.c++/atomic-14.C:42:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:46:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:50:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:54:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-14.C:58:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:62:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:66:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-14.C:70:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:74:  #pragma omp atomic seq_cst, read
testsuite/libgomp.c++/atomic-14.C:78:  #pragma omp atomic capture , seq_cst
testsuite/libgomp.c++/atomic-14.C:82:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:86:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:90:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:94:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/pr48869.C:26:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:34:  #pragma omp task shared(a0)
testsuite/libgomp.c++/pr48869.C:36:  #pragma omp task default(shared)
testsuite/libgomp.c++/pr48869.C:38:  #pragma omp parallel shared(a0)
testsuite/libgomp.c++/pr48869.C:39:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:41:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:47:  #pragma omp task shared(b0)
testsuite/libgomp.c++/pr48869.C:50:  #pragma omp task default(shared)
testsuite/libgomp.c++/pr48869.C:53:  #pragma omp parallel shared(b2)
testsuite/libgomp.c++/pr48869.C:54:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:57:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:60:  #pragma omp parallel private (b4)
testsuite/libgomp.c++/pr48869.C:61:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:64:  #pragma omp parallel firstprivate (b5)
testsuite/libgomp.c++/pr48869.C:65:    #pragma omp task
testsuite/libgomp.c++/pr39573.C:9:  #pragma omp atomic
testsuite/libgomp.c++/pr39573.C:18:#pragma omp parallel for
testsuite/libgomp.c++/simd-1.C:41:  #pragma omp simd aligned(a, p : 32) linear(k: m + 1) \
testsuite/libgomp.c++/for-2.C:32:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:41:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-2.C:50:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:60:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-2.C:68:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:77:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:86:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:96:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:105:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:115:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:124:#pragma omp parallel
testsuite/libgomp.c++/for-2.C:126:#pragma omp for nowait
testsuite/libgomp.c++/for-2.C:129:#pragma omp single
testsuite/libgomp.c++/for-2.C:139:#pragma omp parallel for
testsuite/libgomp.c++/atomic-13.C:19:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-13.C:21:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-13.C:25:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:29:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:33:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:39:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-13.C:43:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:49:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:55:  #pragma omp atomic read
testsuite/libgomp.c++/loop-11.C:11:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:18:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:25:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:32:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:39:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:46:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:53:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:60:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/pr35185.C:25:#pragma omp parallel shared (s)
testsuite/libgomp.c++/pr35185.C:28:      #pragma omp atomic
examples/pedro-test.c:18: *   #pragma omp paralell for tasks(myarray, ntasks)
examples/pedro-test.c:37:       #pragma omp parallel num_threads(2)
examples/pedro-test.c:44:               #pragma omp for schedule(runtime)
libgomp.texi:110:@code{#pragma omp} in C/C++ and @code{!$omp} directives in free form,
libgomp.texi:1819:#pragma omp for firstprivate(x) lastprivate(y)
libgomp.texi:1861:  #pragma omp parallel
libgomp.texi:1912:  #pragma omp parallel for
libgomp.texi:1938:  #pragma omp for schedule(runtime)
libgomp.texi:1993:  #pragma omp sections
libgomp.texi:1995:    #pragma omp section
libgomp.texi:1997:    #pragma omp section
libgomp.texi:1999:    #pragma omp section
libgomp.texi:2030:  #pragma omp single
libgomp.texi:2047:  #pragma omp single copyprivate(x)
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ grep -n 'pragma'
^C
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ grep -rn 'pragma'
build/libtool:3066:#pragma GCC diagnostic ignored \"-Wstrict-prototypes\"
build/libgomp.info:90:directive '#pragma omp' in C/C++ and '!$omp' directives in free form,
build/libgomp.info:1630:     #pragma omp for firstprivate(x) lastprivate(y)
build/libgomp.info:1671:       #pragma omp parallel
build/libgomp.info:1715:       #pragma omp parallel for
build/libgomp.info:1737:       #pragma omp for schedule(runtime)
build/libgomp.info:1788:       #pragma omp sections
build/libgomp.info:1790:         #pragma omp section
build/libgomp.info:1792:         #pragma omp section
build/libgomp.info:1794:         #pragma omp section
build/libgomp.info:1823:       #pragma omp single
build/libgomp.info:1836:       #pragma omp single copyprivate(x)
libgomp.h:45:# pragma GCC visibility push(hidden)
libgomp.h:654:# pragma GCC visibility pop
critical.c:119:   long as all parallel references are within #pragma omp atomic directives.
ChangeLog:110:  #pragma omp for simd testing.
ChangeLog:119:  #pragma omp for simd testing.
ChangeLog:864:  * testsuite/libgomp.c/pr26943-2.c: Remove #pragma omp barrier,
ChangeLog:3979: Use pragma GCC visibility instead of ATTRIBUTE_HIDDEN.
team.c:848:     As #pragma omp cancel parallel might get awaited count in
config/linux/wait.h:40:# pragma GCC visibility push(hidden)
config/linux/wait.h:68:# pragma GCC visibility pop
config/linux/futex.h:33:#pragma GCC visibility push(default)
config/linux/futex.h:39:#pragma GCC visibility pop
config/posix/sem.h:37:# pragma GCC visibility push(default)
config/posix/sem.h:43:# pragma GCC visibility pop
parallel.c:190:  as #pragma omp cancel parallel also cancels all explicit
testsuite/libgomp.c/loop-6.c:16:#pragma omp atomic
testsuite/libgomp.c/loop-6.c:34:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-6.c:38:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:46:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:54:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:60:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:66:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:75:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-6.c:102:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-6.c:106:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:114:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:122:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:128:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:134:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:143:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-6.c:170:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-6.c:174:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:182:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:190:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:196:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:202:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:211:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-6.c:238:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-6.c:242:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:250:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:258:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:264:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:270:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:279:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-6.c:306:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-6.c:310:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-6.c:318:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-6.c:326:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-6.c:332:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-6.c:338:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-6.c:347:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/omp_workshare4.c:30:#pragma omp parallel for     \
testsuite/libgomp.c/pr24455-1.c:4:#pragma omp threadprivate (i)
testsuite/libgomp.c/pr42029.c:12:#pragma omp parallel for private(i) reduction(+:c)
testsuite/libgomp.c/shared-3.c:12:  #pragma omp parallel
testsuite/libgomp.c/atomic-3.c:15:#pragma omp parallel num_threads (4)
testsuite/libgomp.c/atomic-3.c:18:    #pragma omp barrier
testsuite/libgomp.c/atomic-3.c:23:      #pragma omp atomic
testsuite/libgomp.c/atomic-3.c:25:      #pragma omp atomic
testsuite/libgomp.c/atomic-3.c:27:      #pragma omp atomic
testsuite/libgomp.c/atomic-3.c:29:      #pragma omp atomic
testsuite/libgomp.c/atomic-3.c:31:      #pragma omp atomic
testsuite/libgomp.c/thread-limit-1.c:14:  #pragma omp parallel num_threads (3)
testsuite/libgomp.c/thread-limit-1.c:17:  #pragma omp parallel num_threads (3)
testsuite/libgomp.c/thread-limit-1.c:20:  #pragma omp parallel num_threads (8)
testsuite/libgomp.c/thread-limit-1.c:23:  #pragma omp parallel num_threads (6)
testsuite/libgomp.c/thread-limit-1.c:27:  #pragma omp parallel num_threads (5)
testsuite/libgomp.c/thread-limit-1.c:28:  #pragma omp parallel num_threads (5)
testsuite/libgomp.c/thread-limit-1.c:29:  #pragma omp parallel num_threads (2)
testsuite/libgomp.c/thread-limit-1.c:32:    #pragma omp atomic capture
testsuite/libgomp.c/thread-limit-1.c:37:    #pragma omp atomic
testsuite/libgomp.c/atomic-17.c:10:  #pragma omp atomic seq_cst
testsuite/libgomp.c/atomic-17.c:12:  #pragma omp atomic read seq_cst
testsuite/libgomp.c/atomic-17.c:16:  #pragma omp atomic seq_cst update
testsuite/libgomp.c/atomic-17.c:18:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c/atomic-17.c:22:  #pragma omp atomic seq_cst, capture
testsuite/libgomp.c/atomic-17.c:26:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c/atomic-17.c:30:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c/atomic-17.c:34:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c/atomic-17.c:38:  #pragma omp atomic seq_cst read
testsuite/libgomp.c/atomic-17.c:42:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c/atomic-17.c:46:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c/atomic-17.c:50:  #pragma omp atomic read seq_cst
testsuite/libgomp.c/atomic-17.c:54:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c/atomic-17.c:58:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c/atomic-17.c:62:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c/atomic-17.c:66:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c/atomic-17.c:70:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c/atomic-17.c:74:  #pragma omp atomic seq_cst, read
testsuite/libgomp.c/atomic-17.c:78:  #pragma omp atomic capture , seq_cst
testsuite/libgomp.c/atomic-17.c:82:  #pragma omp atomic read seq_cst
testsuite/libgomp.c/atomic-17.c:86:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c/atomic-17.c:90:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c/atomic-17.c:94:  #pragma omp atomic read seq_cst
testsuite/libgomp.c/thread-limit-3.c:7:  #pragma omp target if (0)
testsuite/libgomp.c/thread-limit-3.c:8:  #pragma omp teams thread_limit (1)
testsuite/libgomp.c/copyin-2.c:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c/copyin-2.c:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c/copyin-2.c:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c/pr39154.c:14:#pragma omp parallel for
testsuite/libgomp.c/pr39154.c:18:#pragma omp parallel for
testsuite/libgomp.c/pr39154.c:32:#pragma omp parallel for shared (n, a, b)
testsuite/libgomp.c/pr39154.c:36:#pragma omp parallel for
testsuite/libgomp.c/pr39154.c:50:#pragma omp parallel for
testsuite/libgomp.c/pr39154.c:54:#pragma omp parallel for shared (n, a, b)
testsuite/libgomp.c/pr39154.c:68:#pragma omp parallel for shared (n, a, b)
testsuite/libgomp.c/pr39154.c:72:#pragma omp parallel for shared (n, a, b)
testsuite/libgomp.c/pr39154.c:86:#pragma omp parallel for private (a, b)
testsuite/libgomp.c/pr39154.c:90:#pragma omp parallel for
testsuite/libgomp.c/pr39154.c:95:#pragma omp parallel for private (a, b)
testsuite/libgomp.c/pr39154.c:99:#pragma omp parallel for private (b)
testsuite/libgomp.c/simd-8.c:9:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-8.c:10:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-8.c:11:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/simd-8.c:19:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u) collapse(2)
testsuite/libgomp.c/pr26171.c:7:#pragma omp threadprivate (thrv)
testsuite/libgomp.c/omp-single-3.c:6:  #pragma omp single copyprivate(a) copyprivate(b)
testsuite/libgomp.c/omp-single-3.c:17:  #pragma omp parallel
testsuite/libgomp.c/for-3.c:8:#pragma omp declare target
testsuite/libgomp.c/for-3.c:74:#pragma omp end declare target
testsuite/libgomp.c/for-3.c:80:  #pragma omp target teams reduction(|:err)
testsuite/libgomp.c/task-5.c:12:#pragma omp parallel shared(err)
testsuite/libgomp.c/task-5.c:15:      #pragma omp atomic write
testsuite/libgomp.c/task-5.c:17:    #pragma omp task if (0) shared(err)
testsuite/libgomp.c/task-5.c:20:          #pragma omp atomic write
testsuite/libgomp.c/task-5.c:22:        #pragma omp task if (0) shared(err)
testsuite/libgomp.c/task-5.c:24:            #pragma omp atomic write
testsuite/libgomp.c/task-5.c:27:    #pragma omp task final (1) shared(err)
testsuite/libgomp.c/task-5.c:30:          #pragma omp atomic write
testsuite/libgomp.c/task-5.c:32:        #pragma omp taskyield
testsuite/libgomp.c/task-5.c:33:        #pragma omp taskwait
testsuite/libgomp.c/task-5.c:34:        #pragma omp task shared(err)
testsuite/libgomp.c/task-5.c:36:            #pragma omp atomic write
testsuite/libgomp.c/task-5.c:40:  #pragma omp atomic read
testsuite/libgomp.c/task-4.c:13:    #pragma omp atomic
testsuite/libgomp.c/task-4.c:28:  #pragma omp task firstprivate (p, q)
testsuite/libgomp.c/task-4.c:35:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c/private-1.c:9:#pragma omp parallel private(j, m) shared(k, n) firstprivate(i, l) \
testsuite/libgomp.c/private-1.c:15:      #pragma omp atomic
testsuite/libgomp.c/private-1.c:29:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c/private-1.c:31:  #pragma omp section
testsuite/libgomp.c/private-1.c:35:      #pragma omp parallel num_threads(1) firstprivate(v1, v2, v3, v4)
testsuite/libgomp.c/simd-16.c:11:  #pragma omp simd linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-16.c:20:  #pragma omp simd linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-16.c:29:  #pragma omp simd collapse (2) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-16.c:39:  #pragma omp parallel for simd schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-16.c:48:  #pragma omp parallel for simd schedule (static, 4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-16.c:57:  #pragma omp parallel for simd collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/cancel-for-2.c:11:  #pragma omp parallel num_threads (32) shared (v, w)
testsuite/libgomp.c/cancel-for-2.c:14:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:17:  #pragma omp cancel for if (x[0])
testsuite/libgomp.c/cancel-for-2.c:20:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:23:  #pragma omp cancel for if (x[1])
testsuite/libgomp.c/cancel-for-2.c:24:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:27:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:30:  #pragma omp cancel for if (x[2])
testsuite/libgomp.c/cancel-for-2.c:31:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:34:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:37:  #pragma omp cancel for if (x[3])
testsuite/libgomp.c/cancel-for-2.c:38:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:44:  #pragma omp parallel num_threads (32) shared (v, w)
testsuite/libgomp.c/cancel-for-2.c:50:    #pragma omp cancel parallel if (omp_get_thread_num () == 1 && x[4])
testsuite/libgomp.c/cancel-for-2.c:51:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:54:  #pragma omp cancel for if (x[0])
testsuite/libgomp.c/cancel-for-2.c:57:    #pragma omp cancel parallel if (omp_get_thread_num () == 2 && x[4])
testsuite/libgomp.c/cancel-for-2.c:58:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:61:  #pragma omp cancel for if (x[1])
testsuite/libgomp.c/cancel-for-2.c:62:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:65:    #pragma omp cancel parallel if (omp_get_thread_num () == 3 && x[4])
testsuite/libgomp.c/cancel-for-2.c:66:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:69:  #pragma omp cancel for if (x[2])
testsuite/libgomp.c/cancel-for-2.c:70:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:73:    #pragma omp cancel parallel if (omp_get_thread_num () == 4 && x[4])
testsuite/libgomp.c/cancel-for-2.c:74:    #pragma omp for
testsuite/libgomp.c/cancel-for-2.c:77:  #pragma omp cancel for if (x[3])
testsuite/libgomp.c/cancel-for-2.c:78:  #pragma omp atomic
testsuite/libgomp.c/cancel-for-2.c:81:    #pragma omp cancel parallel if (omp_get_thread_num () == 5 && x[4])
testsuite/libgomp.c/cancel-sections-1.c:12:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c/cancel-sections-1.c:14:    #pragma omp sections
testsuite/libgomp.c/cancel-sections-1.c:17:       #pragma omp cancel sections
testsuite/libgomp.c/cancel-sections-1.c:20:      #pragma omp section
testsuite/libgomp.c/cancel-sections-1.c:22:       #pragma omp cancel sections
testsuite/libgomp.c/cancel-sections-1.c:25:      #pragma omp section
testsuite/libgomp.c/cancel-sections-1.c:27:       #pragma omp cancel sections
testsuite/libgomp.c/cancel-sections-1.c:30:      #pragma omp section
testsuite/libgomp.c/cancel-sections-1.c:32:       #pragma omp cancel sections
testsuite/libgomp.c/simd-17.c:17:  #pragma omp simd linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-17.c:26:  #pragma omp simd linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-17.c:35:  #pragma omp simd collapse (2) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-17.c:45:  #pragma omp parallel for simd schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-17.c:54:  #pragma omp parallel for simd schedule (static, 4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-17.c:63:  #pragma omp parallel for simd collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/cancel-parallel-2.c:11:  #pragma omp parallel firstprivate(x) num_threads (32)
testsuite/libgomp.c/cancel-parallel-2.c:17:     #pragma omp cancel parallel
testsuite/libgomp.c/cancel-parallel-2.c:20:     #pragma omp task
testsuite/libgomp.c/cancel-parallel-2.c:22:     #pragma omp task
testsuite/libgomp.c/cancel-parallel-2.c:24:     #pragma omp task
testsuite/libgomp.c/cancel-parallel-2.c:31:     #pragma omp cancellation point parallel
testsuite/libgomp.c/cancel-parallel-2.c:34:    #pragma omp barrier
testsuite/libgomp.c/vla-1.c:23:#pragma omp parallel default (shared) num_threads (4) \
testsuite/libgomp.c/vla-1.c:32:#pragma omp barrier
testsuite/libgomp.c/vla-1.c:36:#pragma omp master
testsuite/libgomp.c/vla-1.c:41:#pragma omp barrier
testsuite/libgomp.c/atomic-5.c:16:  #pragma omp parallel for shared (d)
testsuite/libgomp.c/atomic-5.c:18:      #pragma omp atomic
testsuite/libgomp.c/task-3.c:13:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c/task-3.c:15:    #pragma omp critical
testsuite/libgomp.c/task-3.c:22:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c/task-3.c:24:    #pragma omp critical
testsuite/libgomp.c/task-3.c:31:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c/task-3.c:33:    #pragma omp critical
testsuite/libgomp.c/task-3.c:40:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c/task-3.c:42:    #pragma omp critical
testsuite/libgomp.c/task-3.c:49:  #pragma omp taskwait
testsuite/libgomp.c/task-3.c:59:  #pragma omp parallel num_threads (4) reduction(+:r)
testsuite/libgomp.c/task-3.c:62:        #pragma omp master
testsuite/libgomp.c/omp_workshare2.c:25:#pragma omp parallel shared(a,b,nthreads) private(c,i,tid)
testsuite/libgomp.c/omp_workshare2.c:35:  #pragma omp sections nowait
testsuite/libgomp.c/omp_workshare2.c:37:    #pragma omp section
testsuite/libgomp.c/omp_workshare2.c:47:    #pragma omp section
testsuite/libgomp.c/simd-4.c:9:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-4.c:10:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-4.c:11:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/simd-4.c:19:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u)
testsuite/libgomp.c/depend-3.c:7:  #pragma omp parallel
testsuite/libgomp.c/depend-3.c:8:  #pragma omp single
testsuite/libgomp.c/depend-3.c:11:    #pragma omp taskgroup
testsuite/libgomp.c/depend-3.c:13:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-3.c:19:      #pragma omp taskgroup
testsuite/libgomp.c/depend-3.c:21:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-3.c:27:      #pragma omp task shared (y) depend(inout: y)
testsuite/libgomp.c/depend-3.c:33:      #pragma omp taskgroup
testsuite/libgomp.c/depend-3.c:35:        #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-3.c:41:        #pragma omp taskgroup
testsuite/libgomp.c/depend-3.c:43:          #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/cancel-for-1.c:10:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c/cancel-for-1.c:13:    #pragma omp for
testsuite/libgomp.c/cancel-for-1.c:16:  #pragma omp cancel for
testsuite/libgomp.c/omp-parallel-if.c:15:  #pragma omp parallel if (foo () > 10) shared (A)
testsuite/libgomp.c/omp-parallel-if.c:23:  #pragma omp parallel if (foo () == 10) num_threads (3) shared (A)
testsuite/libgomp.c/omp-parallel-if.c:31:  #pragma omp parallel if (foo () == 10) num_threads (foo ()) shared (A)
testsuite/libgomp.c/loop-5.c:11:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:18:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:25:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:32:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:39:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:46:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:53:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:60:#pragma omp parallel for
testsuite/libgomp.c/loop-5.c:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-5.c:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-5.c:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-5.c:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/atomic-15.c:10:  #pragma omp atomic
testsuite/libgomp.c/atomic-15.c:12:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:16:  #pragma omp atomic update
testsuite/libgomp.c/atomic-15.c:18:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:22:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:26:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:30:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:34:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:38:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:42:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:46:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:50:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:54:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:58:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:62:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:66:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:70:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:74:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:78:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:82:  #pragma omp atomic read
testsuite/libgomp.c/atomic-15.c:86:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:90:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-15.c:94:  #pragma omp atomic read
testsuite/libgomp.c/loop-8.c:9:  #pragma omp for schedule (auto)
testsuite/libgomp.c/loop-8.c:18:  #pragma omp parallel for schedule (auto)
testsuite/libgomp.c/loop-8.c:21:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c/pr38650.c:13:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/pr38650.c:19:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/pr38650.c:25:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/pr38650.c:31:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/pr38650.c:37:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/pr38650.c:43:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c/nqueens-1.c:10:#pragma omp threadprivate (cnt)
testsuite/libgomp.c/nqueens-1.c:32:       #pragma omp task
testsuite/libgomp.c/nqueens-1.c:53:  #pragma omp parallel
testsuite/libgomp.c/nqueens-1.c:57:  #pragma omp parallel reduction (+:tempcnt)
testsuite/libgomp.c/nqueens-1.c:59:      #pragma omp single
testsuite/libgomp.c/reduction-5.c:9:#pragma omp parallel
testsuite/libgomp.c/reduction-5.c:10:  #pragma omp sections reduction (+:sum)
testsuite/libgomp.c/reduction-5.c:12:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:14:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:16:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:22:#pragma omp parallel sections reduction (+:sum)
testsuite/libgomp.c/reduction-5.c:24:  #pragma omp section
testsuite/libgomp.c/reduction-5.c:26:  #pragma omp section
testsuite/libgomp.c/reduction-5.c:28:  #pragma omp section
testsuite/libgomp.c/reduction-5.c:34:#pragma omp parallel
testsuite/libgomp.c/reduction-5.c:35:  #pragma omp sections reduction (+:sum) reduction (*:prod)
testsuite/libgomp.c/reduction-5.c:37:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:42:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:47:    #pragma omp section
testsuite/libgomp.c/reduction-5.c:57:#pragma omp parallel sections reduction (+:sum) reduction (*:prod)
testsuite/libgomp.c/reduction-5.c:59:  #pragma omp section
testsuite/libgomp.c/reduction-5.c:64:  #pragma omp section
testsuite/libgomp.c/reduction-5.c:69:  #pragma omp section
testsuite/libgomp.c/cancel-parallel-3.c:18:  #pragma omp parallel num_threads (16)
testsuite/libgomp.c/cancel-parallel-3.c:22:    #pragma omp barrier
testsuite/libgomp.c/cancel-parallel-3.c:26:     #pragma omp cancellation point parallel
testsuite/libgomp.c/cancel-parallel-3.c:29:      #pragma omp for schedule (runtime) nowait
testsuite/libgomp.c/cancel-parallel-3.c:35:     #pragma omp cancel parallel
testsuite/libgomp.c/debug-1.c:11:  #pragma omp parallel private (v1k) firstprivate (v1j) shared (v1i) reduction (+:v1l)
testsuite/libgomp.c/debug-1.c:28:  #pragma omp single private (v2i) firstprivate (v2k)
testsuite/libgomp.c/debug-1.c:42:  #pragma omp parallel
testsuite/libgomp.c/debug-1.c:44:    #pragma omp master
testsuite/libgomp.c/debug-1.c:46:    #pragma omp single private (v3i) firstprivate (v3k)
testsuite/libgomp.c/debug-1.c:53:    #pragma omp atomic
testsuite/libgomp.c/debug-1.c:65:  #pragma omp sections private (v4i) firstprivate (v4k) reduction (+:v4l)
testsuite/libgomp.c/debug-1.c:67:    #pragma omp section
testsuite/libgomp.c/debug-1.c:75:    #pragma omp section
testsuite/libgomp.c/debug-1.c:90:  #pragma omp parallel
testsuite/libgomp.c/debug-1.c:92:    #pragma omp master
testsuite/libgomp.c/debug-1.c:94:    #pragma omp sections private (v5i) firstprivate (v5k) reduction (+:v5l)
testsuite/libgomp.c/debug-1.c:96:      #pragma omp section
testsuite/libgomp.c/debug-1.c:104:      #pragma omp section
testsuite/libgomp.c/debug-1.c:122:  #pragma omp for private (v6i) firstprivate (v6k) reduction (+:v6l)
testsuite/libgomp.c/debug-1.c:136:  #pragma omp parallel
testsuite/libgomp.c/debug-1.c:138:    #pragma omp master
testsuite/libgomp.c/debug-1.c:140:    #pragma omp for private (v7i) firstprivate (v7k) reduction (+:v7l)
testsuite/libgomp.c/pr34513.c:16:  #pragma omp parallel num_threads (thrs)
testsuite/libgomp.c/pr34513.c:20:    #pragma omp atomic
testsuite/libgomp.c/pr34513.c:23:    #pragma omp barrier
testsuite/libgomp.c/pr34513.c:26:      #pragma omp atomic
testsuite/libgomp.c/loop-16.c:16:  #pragma omp for lastprivate (i)
testsuite/libgomp.c/target-3.c:9:  #pragma omp target if (0)
testsuite/libgomp.c/target-3.c:12:  #pragma omp target if (0)
testsuite/libgomp.c/target-3.c:13:  #pragma omp teams
testsuite/libgomp.c/simd-15.c:17:  #pragma omp simd linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:26:  #pragma omp simd linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-15.c:35:  #pragma omp simd linear(i) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:44:  #pragma omp simd linear(i:4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-15.c:53:  #pragma omp simd collapse (2) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:63:  #pragma omp simd collapse (2) lastprivate (i, j) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:73:  #pragma omp parallel for simd schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:82:  #pragma omp parallel for simd schedule (static, 4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-15.c:91:  #pragma omp parallel for simd schedule (static, 4) linear(i) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:100:  #pragma omp parallel for simd schedule (static, 4) linear(i:4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-15.c:109:  #pragma omp parallel for simd lastprivate (i, j) collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-15.c:119:  #pragma omp parallel for simd collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/atomic-13.c:10:  #pragma omp atomic read
testsuite/libgomp.c/atomic-13.c:12:  #pragma omp atomic read
testsuite/libgomp.c/atomic-13.c:16:  #pragma omp atomic write
testsuite/libgomp.c/atomic-13.c:18:  #pragma omp atomic write
testsuite/libgomp.c/atomic-13.c:20:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-13.c:22:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-13.c:26:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-13.c:31:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-13.c:38:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-13.c:43:  #pragma omp atomic capture
testsuite/libgomp.c/pr29947-2.c:13:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:15:#pragma omp for schedule (static)
testsuite/libgomp.c/pr29947-2.c:22:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:33:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:35:#pragma omp for schedule (static)
testsuite/libgomp.c/pr29947-2.c:42:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:53:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:55:#pragma omp for schedule (static, 1)
testsuite/libgomp.c/pr29947-2.c:62:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:73:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:75:#pragma omp for schedule (static, 1)
testsuite/libgomp.c/pr29947-2.c:82:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:93:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:95:#pragma omp for schedule (static) ordered
testsuite/libgomp.c/pr29947-2.c:100:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:103:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:114:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:116:#pragma omp for schedule (static) ordered
testsuite/libgomp.c/pr29947-2.c:121:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:124:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:135:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:137:#pragma omp for schedule (static, 1) ordered
testsuite/libgomp.c/pr29947-2.c:142:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:145:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:156:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-2.c:158:#pragma omp for schedule (static, 1) ordered
testsuite/libgomp.c/pr29947-2.c:163:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:166:#pragma omp atomic
testsuite/libgomp.c/pr29947-2.c:177:#pragma omp parallel for reduction (+:e,c) schedule (static)
testsuite/libgomp.c/pr29947-2.c:192:#pragma omp parallel for reduction (+:e,c) schedule (static)
testsuite/libgomp.c/pr29947-2.c:207:#pragma omp parallel for reduction (+:e,c) schedule (static, 1)
testsuite/libgomp.c/pr29947-2.c:222:#pragma omp parallel for reduction (+:e,c) schedule (static, 1)
testsuite/libgomp.c/pr29947-2.c:237:#pragma omp parallel for reduction (+:e,c) schedule (static) ordered
testsuite/libgomp.c/pr29947-2.c:242:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:253:#pragma omp parallel for reduction (+:e,c) schedule (static) ordered
testsuite/libgomp.c/pr29947-2.c:258:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:269:#pragma omp parallel for reduction (+:e,c) schedule (static, 1) ordered
testsuite/libgomp.c/pr29947-2.c:274:#pragma omp ordered
testsuite/libgomp.c/pr29947-2.c:285:#pragma omp parallel for reduction (+:e,c) schedule (static, 1) ordered
testsuite/libgomp.c/pr29947-2.c:290:#pragma omp ordered
testsuite/libgomp.c/reduction-1.c:9:#pragma omp parallel num_threads(4) reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c/reduction-1.c:12:#pragma omp atomic
testsuite/libgomp.c/reduction-1.c:16:#pragma omp atomic
testsuite/libgomp.c/target-4.c:8:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c/target-4.c:9:  #pragma omp target if (0)
testsuite/libgomp.c/target-4.c:10:  #pragma omp single
testsuite/libgomp.c/udr-3.c:7:#pragma omp declare reduction (+:struct S:foo (&omp_out, &omp_in))
testsuite/libgomp.c/udr-3.c:22:  #pragma omp parallel reduction (+:s, i)
testsuite/libgomp.c/omp-loop02.c:13:#pragma omp for
testsuite/libgomp.c/omp-loop02.c:22:#pragma omp parallel shared(a)
testsuite/libgomp.c/pr26943-1.c:13:#pragma omp parallel for num_threads (16) firstprivate (n) lastprivate (n) \
testsuite/libgomp.c/pr26943-2.c:16:#pragma omp parallel for shared (a, e) firstprivate (b, f) \
testsuite/libgomp.c/pr26943-2.c:25:#pragma omp atomic
testsuite/libgomp.c/pr26943-2.c:30:#pragma omp atomic
testsuite/libgomp.c/target-8.c:8:  #pragma omp parallel
testsuite/libgomp.c/target-8.c:9:  #pragma omp single
testsuite/libgomp.c/target-8.c:10:  #pragma omp target teams distribute parallel for map(p[0:24])
testsuite/libgomp.c/depend-2.c:11:  #pragma omp parallel private (i)
testsuite/libgomp.c/depend-2.c:13:    #pragma omp single nowait
testsuite/libgomp.c/depend-2.c:17:        #pragma omp task depend(out: a[i * 8 : 4])
testsuite/libgomp.c/depend-2.c:19:        #pragma omp task depend(out: p[i * 8 : 2])
testsuite/libgomp.c/depend-2.c:21:        #pragma omp task depend(out: x)
testsuite/libgomp.c/depend-2.c:25:      #pragma omp task depend(in: a[i * 8 : 4]) \
testsuite/libgomp.c/depend-2.c:38:      #pragma omp task depend(inout: a[i * 8 : 4]) \
testsuite/libgomp.c/depend-2.c:52:      #pragma omp task depend(in: a[i * 16 : 4], a[i * 16 + 8 : 4], x)
testsuite/libgomp.c/nestedfn-4.c:23:#pragma omp parallel if (foo ()) num_threads (2)
testsuite/libgomp.c/nestedfn-4.c:25:#pragma omp atomic
testsuite/libgomp.c/nestedfn-4.c:28:#pragma omp parallel for schedule (static, bar ()) num_threads (2) \
testsuite/libgomp.c/nestedfn-4.c:32:#pragma omp atomic
testsuite/libgomp.c/nestedfn-4.c:37:#pragma omp parallel if (foo ()) num_threads (2)
testsuite/libgomp.c/nestedfn-4.c:39:#pragma omp atomic
testsuite/libgomp.c/nestedfn-4.c:42:#pragma omp parallel for schedule (static, bar ()) num_threads (2) \
testsuite/libgomp.c/nestedfn-4.c:46:#pragma omp atomic
testsuite/libgomp.c/nestedfn-4.c:49:#pragma omp parallel num_threads (4) reduction (|:l)
testsuite/libgomp.c/nestedfn-4.c:51:#pragma omp atomic
testsuite/libgomp.c/nestedfn-4.c:56:#pragma omp parallel num_threads (4) reduction (|:l)
testsuite/libgomp.c/nestedfn-4.c:58:#pragma omp atomic
testsuite/libgomp.c/omp_orphan.c:22:#pragma omp for reduction(+:sum)
testsuite/libgomp.c/omp_orphan.c:41:#pragma omp parallel
testsuite/libgomp.c/pr36802-1.c:9:#pragma omp parallel
testsuite/libgomp.c/pr36802-1.c:10:  #pragma omp single
testsuite/libgomp.c/pr36802-1.c:16:       #pragma omp task
testsuite/libgomp.c/pr49897-1.c:10:#pragma omp parallel reduction(+:sum)
testsuite/libgomp.c/pr49897-1.c:12:  #pragma omp for firstprivate(x) lastprivate(x, y)
testsuite/libgomp.c/pr49897-1.c:17:      #pragma omp parallel reduction(+:sum)
testsuite/libgomp.c/pr49897-1.c:19:     #pragma omp for firstprivate(y) lastprivate(y)
testsuite/libgomp.c/pr29947-1.c:13:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:15:#pragma omp for schedule (dynamic)
testsuite/libgomp.c/pr29947-1.c:22:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:33:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:35:#pragma omp for schedule (dynamic)
testsuite/libgomp.c/pr29947-1.c:42:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:53:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:55:#pragma omp for schedule (guided)
testsuite/libgomp.c/pr29947-1.c:62:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:73:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:75:#pragma omp for schedule (guided)
testsuite/libgomp.c/pr29947-1.c:82:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:93:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:95:#pragma omp for schedule (dynamic) ordered
testsuite/libgomp.c/pr29947-1.c:100:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:103:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:114:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:116:#pragma omp for schedule (dynamic) ordered
testsuite/libgomp.c/pr29947-1.c:121:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:124:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:135:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:137:#pragma omp for schedule (guided) ordered
testsuite/libgomp.c/pr29947-1.c:142:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:145:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:156:#pragma omp parallel reduction (+:e,c)
testsuite/libgomp.c/pr29947-1.c:158:#pragma omp for schedule (guided) ordered
testsuite/libgomp.c/pr29947-1.c:163:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:166:#pragma omp atomic
testsuite/libgomp.c/pr29947-1.c:177:#pragma omp parallel for reduction (+:e,c) schedule (dynamic)
testsuite/libgomp.c/pr29947-1.c:192:#pragma omp parallel for reduction (+:e,c) schedule (dynamic)
testsuite/libgomp.c/pr29947-1.c:207:#pragma omp parallel for reduction (+:e,c) schedule (guided)
testsuite/libgomp.c/pr29947-1.c:222:#pragma omp parallel for reduction (+:e,c) schedule (guided)
testsuite/libgomp.c/pr29947-1.c:237:#pragma omp parallel for reduction (+:e,c) schedule (dynamic) ordered
testsuite/libgomp.c/pr29947-1.c:242:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:253:#pragma omp parallel for reduction (+:e,c) schedule (dynamic) ordered
testsuite/libgomp.c/pr29947-1.c:258:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:269:#pragma omp parallel for reduction (+:e,c) schedule (guided) ordered
testsuite/libgomp.c/pr29947-1.c:274:#pragma omp ordered
testsuite/libgomp.c/pr29947-1.c:285:#pragma omp parallel for reduction (+:e,c) schedule (guided) ordered
testsuite/libgomp.c/pr29947-1.c:290:#pragma omp ordered
testsuite/libgomp.c/reduction-2.c:9:#pragma omp parallel num_threads(4)
testsuite/libgomp.c/reduction-2.c:11:#pragma omp single
testsuite/libgomp.c/reduction-2.c:18:#pragma omp for reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c/reduction-2.c:22:#pragma omp atomic
testsuite/libgomp.c/reduction-2.c:36:#pragma omp atomic
testsuite/libgomp.c/reduction-2.c:39:#pragma omp atomic
testsuite/libgomp.c/reduction-2.c:42:#pragma omp atomic
testsuite/libgomp.c/copyin-1.c:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c/copyin-1.c:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c/copyin-1.c:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c/simd-3.c:17:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s) \
testsuite/libgomp.c/simd-3.c:27:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s2) \
testsuite/libgomp.c/simd-3.c:47:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s) \
testsuite/libgomp.c/simd-3.c:57:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s2) \
testsuite/libgomp.c/target-1.c:18:#pragma omp declare target
testsuite/libgomp.c/target-1.c:23:  #pragma omp atomic update
testsuite/libgomp.c/target-1.c:27:#pragma omp end declare target
testsuite/libgomp.c/target-1.c:35:  #pragma omp target data map(to: b)
testsuite/libgomp.c/target-1.c:37:    #pragma omp target map(tofrom: c)
testsuite/libgomp.c/target-1.c:38:      #pragma omp teams num_teams(y) thread_limit(z) reduction(+:s) firstprivate(x)
testsuite/libgomp.c/target-1.c:39:      #pragma omp distribute dist_schedule(static, 4) collapse(1)
testsuite/libgomp.c/target-1.c:41:          #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/target-1.c:44:    #pragma omp target update from(b, tgtv)
testsuite/libgomp.c/target-1.c:55:  #pragma omp target map(to: b, c)
testsuite/libgomp.c/target-1.c:56:    #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/target-1.c:69:  #pragma omp target map(to: b, c[0:x], d[x:x]) map(to:p[x:64 + (x & 31)])
testsuite/libgomp.c/target-1.c:70:    #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/target-1.c:82:  #pragma omp target update from(tgtv)
testsuite/libgomp.c/pr43893.c:13:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:19:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:25:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:31:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:37:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:43:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:49:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr43893.c:55:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c/pr49898-2.c:10:#pragma omp parallel for reduction(+:sum)
testsuite/libgomp.c/pr49898-2.c:12:    #pragma omp parallel for reduction(+:sum)
testsuite/libgomp.c/atomic-2.c:15:#pragma omp atomic
testsuite/libgomp.c/atomic-2.c:17:#pragma omp atomic
testsuite/libgomp.c/atomic-10.c:12:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:14:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:16:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:18:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:20:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:22:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:24:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:26:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:28:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:30:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:32:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:34:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:36:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:38:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:45:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:47:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:49:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:51:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:53:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:55:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:57:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:59:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:61:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:63:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:65:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:67:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:69:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:71:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:78:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:80:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:82:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:84:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:86:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:88:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:90:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:92:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:94:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:96:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:98:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:100:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:102:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:109:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:111:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:113:  #pragma omp atomic
testsuite/libgomp.c/atomic-10.c:115:  #pragma omp atomic
testsuite/libgomp.c/omp_matvec.c:45:#pragma omp parallel shared(A,b,c,total) private(tid,i)
testsuite/libgomp.c/omp_matvec.c:50:#pragma omp for private(j)
testsuite/libgomp.c/omp_matvec.c:57:    #pragma omp critical
testsuite/libgomp.c/udr-2.c:7:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/udr-2.c:8:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/udr-2.c:9:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/udr-2.c:17:  #pragma omp parallel reduction(+:s, q) reduction(foo:t, u)
testsuite/libgomp.c/simd-9.c:9:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-9.c:10:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-9.c:11:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/simd-9.c:19:  #pragma omp simd aligned(a : 32) lastprivate (i, j) reduction(+:s) reduction(foo:t, u) collapse(2)
testsuite/libgomp.c/simd-9.c:41:  #pragma omp simd aligned(a:32)reduction(+:s)reduction(foo:t,u)collapse(2)
testsuite/libgomp.c/loop-12.c:16:#pragma omp atomic
testsuite/libgomp.c/loop-12.c:34:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-12.c:38:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:46:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:54:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:60:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:66:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:75:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c/loop-12.c:102:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-12.c:106:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:114:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:122:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:128:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:134:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:143:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c/loop-12.c:170:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-12.c:174:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:182:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:190:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:196:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:202:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:211:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c/loop-12.c:238:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-12.c:242:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:250:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:258:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:264:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:270:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:279:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c/loop-12.c:306:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c/loop-12.c:310:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-12.c:318:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-12.c:326:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-12.c:332:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-12.c:338:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/loop-12.c:347:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c/taskgroup-1.c:11:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c/taskgroup-1.c:12:  #pragma omp single
testsuite/libgomp.c/taskgroup-1.c:15:      #pragma omp taskgroup
testsuite/libgomp.c/taskgroup-1.c:18:     #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:20:         #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:22:         #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:29:      #pragma omp taskgroup
testsuite/libgomp.c/taskgroup-1.c:32:     #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:34:         #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:36:         #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:38:         #pragma omp taskwait
testsuite/libgomp.c/taskgroup-1.c:44:      #pragma omp taskgroup
testsuite/libgomp.c/taskgroup-1.c:47:     #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:49:         #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:53:   #pragma omp taskwait
testsuite/libgomp.c/taskgroup-1.c:55:     #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:61:      #pragma omp taskgroup
testsuite/libgomp.c/taskgroup-1.c:65:       #pragma omp taskgroup
testsuite/libgomp.c/taskgroup-1.c:67:           #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:69:           #pragma omp task
testsuite/libgomp.c/taskgroup-1.c:74:       #pragma omp task
testsuite/libgomp.c/omp-single-1.c:7:  #pragma omp parallel shared (i)
testsuite/libgomp.c/omp-single-1.c:9:      #pragma omp single
testsuite/libgomp.c/affinity-1.c:260:  #pragma omp parallel if (0)
testsuite/libgomp.c/affinity-1.c:263:    #pragma omp parallel if (0)
testsuite/libgomp.c/affinity-1.c:266:      #pragma omp parallel if (0)
testsuite/libgomp.c/affinity-1.c:270:      #pragma omp parallel if (0) proc_bind (spread)
testsuite/libgomp.c/affinity-1.c:275:    #pragma omp parallel if (0) proc_bind (master)
testsuite/libgomp.c/affinity-1.c:278:      #pragma omp parallel if (0)
testsuite/libgomp.c/affinity-1.c:282:      #pragma omp parallel if (0) proc_bind (spread)
testsuite/libgomp.c/affinity-1.c:290:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c/affinity-1.c:293:    #pragma omp critical
testsuite/libgomp.c/affinity-1.c:327:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:331:   #pragma omp parallel num_threads (3)
testsuite/libgomp.c/affinity-1.c:334:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:363:   #pragma omp parallel num_threads (5) proc_bind (spread)
testsuite/libgomp.c/affinity-1.c:366:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:397:     #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:401:         #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:404:           #pragma omp critical
testsuite/libgomp.c/affinity-1.c:437:   #pragma omp parallel num_threads (4) proc_bind(master)
testsuite/libgomp.c/affinity-1.c:440:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:469:   #pragma omp parallel num_threads (6) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:472:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:507:  #pragma omp parallel num_threads (5) proc_bind(spread)
testsuite/libgomp.c/affinity-1.c:510:    #pragma omp critical
testsuite/libgomp.c/affinity-1.c:548:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:560:   #pragma omp parallel num_threads (3) firstprivate (pp)
testsuite/libgomp.c/affinity-1.c:563:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:577:   #pragma omp parallel num_threads (5) proc_bind (spread) \
testsuite/libgomp.c/affinity-1.c:581:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:595:   #pragma omp parallel num_threads (4) proc_bind(master) \
testsuite/libgomp.c/affinity-1.c:599:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:613:   #pragma omp parallel num_threads (6) proc_bind (close) \
testsuite/libgomp.c/affinity-1.c:617:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:634:  #pragma omp parallel num_threads (3) proc_bind(master)
testsuite/libgomp.c/affinity-1.c:637:    #pragma omp critical
testsuite/libgomp.c/affinity-1.c:647:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:651:   #pragma omp parallel num_threads (4)
testsuite/libgomp.c/affinity-1.c:654:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:667:   #pragma omp parallel num_threads (4) proc_bind (spread)
testsuite/libgomp.c/affinity-1.c:670:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:706:     #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:710:         #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:713:           #pragma omp critical
testsuite/libgomp.c/affinity-1.c:740:     #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:744:         #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:747:           #pragma omp critical
testsuite/libgomp.c/affinity-1.c:783:   #pragma omp parallel num_threads (4) proc_bind(master)
testsuite/libgomp.c/affinity-1.c:786:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:799:   #pragma omp parallel num_threads (6) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:802:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:837:  #pragma omp parallel num_threads (5) proc_bind(close)
testsuite/libgomp.c/affinity-1.c:840:    #pragma omp critical
testsuite/libgomp.c/affinity-1.c:870:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:887:   #pragma omp parallel num_threads (4) firstprivate (pp)
testsuite/libgomp.c/affinity-1.c:890:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:928:   #pragma omp parallel num_threads (4) proc_bind (spread)
testsuite/libgomp.c/affinity-1.c:931:     #pragma omp critical
testsuite/libgomp.c/affinity-1.c:969:     #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:973:         #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:976:           #pragma omp critical
testsuite/libgomp.c/affinity-1.c:1006:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:1010:        #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:1013:          #pragma omp critical
testsuite/libgomp.c/affinity-1.c:1047:    #pragma omp barrier
testsuite/libgomp.c/affinity-1.c:1051:        #pragma omp parallel num_threads (5) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:1054:          #pragma omp critical
testsuite/libgomp.c/affinity-1.c:1085:  #pragma omp parallel num_threads (4) proc_bind(master) \
testsuite/libgomp.c/affinity-1.c:1089:    #pragma omp critical
testsuite/libgomp.c/affinity-1.c:1102:  #pragma omp parallel num_threads (6) proc_bind (close)
testsuite/libgomp.c/affinity-1.c:1105:    #pragma omp critical
testsuite/libgomp.c/ordered-3.c:18:#pragma omp parallel for ordered schedule (static, 1) num_threads (4) if (0)
testsuite/libgomp.c/ordered-3.c:21:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:26:#pragma omp parallel for ordered schedule (static, 1) num_threads (4) if (1)
testsuite/libgomp.c/ordered-3.c:29:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:34:#pragma omp parallel for ordered schedule (runtime) num_threads (4) if (0)
testsuite/libgomp.c/ordered-3.c:37:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:42:#pragma omp parallel for ordered schedule (runtime) num_threads (4) if (1)
testsuite/libgomp.c/ordered-3.c:45:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:50:#pragma omp parallel for ordered schedule (dynamic) num_threads (4) if (0)
testsuite/libgomp.c/ordered-3.c:53:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:58:#pragma omp parallel for ordered schedule (dynamic) num_threads (4) if (1)
testsuite/libgomp.c/ordered-3.c:61:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:66:#pragma omp parallel for ordered schedule (guided) num_threads (4) if (0)
testsuite/libgomp.c/ordered-3.c:69:#pragma omp ordered
testsuite/libgomp.c/ordered-3.c:74:#pragma omp parallel for ordered schedule (guided) num_threads (4) if (1)
testsuite/libgomp.c/ordered-3.c:77:#pragma omp ordered
testsuite/libgomp.c/udr-1.c:32:#pragma omp declare reduction (foo: struct S: foo (&omp_out, &omp_in)) \
testsuite/libgomp.c/udr-1.c:34:#pragma omp declare reduction (foo: char, int, short: omp_out += omp_in - 4) \
testsuite/libgomp.c/udr-1.c:36:#pragma omp declare reduction (+: struct S: foo (&omp_out, &omp_in)) \
testsuite/libgomp.c/udr-1.c:43:  #pragma omp parallel num_threads (4) reduction (+: s, q) reduction (foo: t)
testsuite/libgomp.c/udr-1.c:61:  #pragma omp declare reduction (foo: struct S: omp_out.s *= omp_in.s) \
testsuite/libgomp.c/udr-1.c:64:    #pragma omp declare reduction (foo: struct S: omp_out.s += omp_in.s) \
testsuite/libgomp.c/udr-1.c:66:    #pragma omp parallel num_threads (4) reduction (+: t, q) \
testsuite/libgomp.c/nestedfn-1.c:14:#pragma omp parallel shared (a) private (b) firstprivate (c) \
testsuite/libgomp.c/nestedfn-1.c:18:#pragma omp barrier
testsuite/libgomp.c/nestedfn-1.c:25:#pragma omp barrier
testsuite/libgomp.c/nestedfn-1.c:35:#pragma omp barrier
testsuite/libgomp.c/nestedfn-1.c:38:#pragma omp barrier
testsuite/libgomp.c/shared-1.c:25:  #pragma omp parallel shared (a, b, A) num_threads (5)
testsuite/libgomp.c/shared-1.c:29:      #pragma omp atomic
testsuite/libgomp.c/shared-1.c:32:      #pragma omp atomic
testsuite/libgomp.c/shared-1.c:35:      #pragma omp for private (j)
testsuite/libgomp.c/simd-7.c:19:  #pragma omp simd aligned(a, p : 32) linear(k: m + 1) \
testsuite/libgomp.c/simd-7.c:41:  #pragma omp simd aligned(a, p : 32) linear(k: m + 1) \
testsuite/libgomp.c/atomic-16.c:17:  #pragma omp atomic update
testsuite/libgomp.c/atomic-16.c:19:  #pragma omp atomic read
testsuite/libgomp.c/atomic-16.c:23:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-16.c:27:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-16.c:31:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-16.c:37:  #pragma omp atomic read
testsuite/libgomp.c/atomic-16.c:41:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-16.c:47:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-16.c:53:  #pragma omp atomic read
testsuite/libgomp.c/nestedfn-5.c:11:#pragma omp sections
testsuite/libgomp.c/nestedfn-5.c:13:    #pragma omp section
testsuite/libgomp.c/nestedfn-5.c:16:    #pragma omp atomic
testsuite/libgomp.c/nestedfn-5.c:19:    #pragma omp section
testsuite/libgomp.c/nestedfn-5.c:22:    #pragma omp atomic
testsuite/libgomp.c/nestedfn-5.c:32:#pragma omp parallel num_threads (2)
testsuite/libgomp.c/pr35196.c:12:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static)
testsuite/libgomp.c/pr35196.c:17:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static, 2)
testsuite/libgomp.c/pr35196.c:22:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (dynamic)
testsuite/libgomp.c/pr35196.c:27:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static)
testsuite/libgomp.c/pr35196.c:32:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static, 2)
testsuite/libgomp.c/pr35196.c:37:#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (dynamic, 3)
testsuite/libgomp.c/critical-2.c:16:#pragma omp parallel shared (A, nthreads)
testsuite/libgomp.c/critical-2.c:18:    #pragma omp master
testsuite/libgomp.c/critical-2.c:21:    #pragma omp for
testsuite/libgomp.c/critical-2.c:25:    #pragma omp critical
testsuite/libgomp.c/single-2.c:8:#pragma omp single copyprivate (i)
testsuite/libgomp.c/icv-1.c:12:  #pragma omp parallel reduction(|: err) num_threads(1)
testsuite/libgomp.c/icv-1.c:17:    #pragma omp task if(0) shared(err)
testsuite/libgomp.c/omp_hello.c:22:#pragma omp parallel private(nthreads, tid)
testsuite/libgomp.c/loop-9.c:11:  #pragma omp parallel for collapse (2) reduction (+:sum) lastprivate (p, q)
testsuite/libgomp.c/simd-1.c:19:  #pragma omp simd aligned(a, p : 32) linear(k: m + 1) \
testsuite/libgomp.c/depend-4.c:7:  #pragma omp parallel
testsuite/libgomp.c/depend-4.c:8:  #pragma omp single
testsuite/libgomp.c/depend-4.c:11:    #pragma omp taskgroup
testsuite/libgomp.c/depend-4.c:13:      #pragma omp task shared (x, y, z) depend(inout: x, y) \
testsuite/libgomp.c/depend-4.c:27:    #pragma omp taskgroup
testsuite/libgomp.c/depend-4.c:29:      #pragma omp task shared (x, y) depend(in: x, y)
testsuite/libgomp.c/depend-4.c:35:      #pragma omp task shared (x, y) depend(in: x, y)
testsuite/libgomp.c/depend-4.c:41:      #pragma omp task shared (x, y, z) depend(inout: x, y) \
testsuite/libgomp.c/target-2.c:26:  #pragma omp target map(to: b, c[:x], d[x:x], e)
testsuite/libgomp.c/target-2.c:27:    #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/target-2.c:41:  #pragma omp target
testsuite/libgomp.c/target-2.c:42:    #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/target-2.c:56:  #pragma omp target data map(from: b, c[:x], d[x:x], e)
testsuite/libgomp.c/target-2.c:58:      #pragma omp target update to(b, c[:x], d[x:x], e)
testsuite/libgomp.c/target-2.c:59:      #pragma omp target map(c[:x], d[x:x])
testsuite/libgomp.c/target-2.c:60:      #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c/loop-15.c:14:  #pragma omp for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:19:  #pragma omp parallel for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:24:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:31:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:38:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:45:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:52:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:59:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:73:  #pragma omp for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:78:  #pragma omp parallel for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:83:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:90:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:97:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:104:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:111:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:118:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:132:  #pragma omp for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:137:  #pragma omp parallel for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:142:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:149:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:156:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:163:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:170:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:177:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:191:  #pragma omp for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:196:  #pragma omp parallel for reduction(+: l) schedule(runtime)
testsuite/libgomp.c/loop-15.c:201:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:208:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:215:  #pragma omp for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:222:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:229:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-15.c:236:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(runtime)
testsuite/libgomp.c/loop-4.c:9:#pragma omp parallel num_threads (4) reduction(+:e)
testsuite/libgomp.c/loop-4.c:12:    #pragma omp for schedule(dynamic,1)
testsuite/libgomp.c/loop-4.c:18:    #pragma omp for schedule(dynamic,1)
testsuite/libgomp.c/atomic-1.c:20:  #pragma omp atomic
testsuite/libgomp.c/atomic-1.c:22:  #pragma omp atomic
testsuite/libgomp.c/atomic-1.c:24:  #pragma omp atomic
testsuite/libgomp.c/atomic-1.c:31:  #pragma omp atomic
testsuite/libgomp.c/atomic-1.c:33:  #pragma omp atomic
testsuite/libgomp.c/atomic-1.c:35:  #pragma omp atomic
testsuite/libgomp.c/copyin-3.c:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c/copyin-3.c:27:#pragma omp parallel copyin (thr)
testsuite/libgomp.c/copyin-3.c:30:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c/copyin-3.c:35:#pragma omp barrier
testsuite/libgomp.c/pr52547.c:16:#pragma omp parallel for reduction(|:e)
testsuite/libgomp.c/reduction-4.c:8:#pragma omp parallel num_threads(4) reduction(-:i) reduction(|:k) \
testsuite/libgomp.c/reduction-4.c:12:#pragma omp atomic
testsuite/libgomp.c/reduction-4.c:16:#pragma omp atomic
testsuite/libgomp.c/omp_reduction.c:28:#pragma omp parallel for reduction(+:sum)
testsuite/libgomp.c/target-6.c:11:  #pragma omp parallel num_threads (3)
testsuite/libgomp.c/target-6.c:16:      #pragma omp parallel num_threads (3)
testsuite/libgomp.c/target-6.c:26:            #pragma omp target if (0)
testsuite/libgomp.c/target-6.c:33:                #pragma omp parallel num_threads (2)
testsuite/libgomp.c/target-6.c:44:            #pragma omp target if (0)
testsuite/libgomp.c/target-6.c:46:                #pragma omp teams thread_limit (2)
testsuite/libgomp.c/target-6.c:53:                    #pragma omp parallel num_threads (2)
testsuite/libgomp.c/simd-6.c:10:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-6.c:11:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-6.c:12:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/simd-6.c:20:  #pragma omp parallel for simd aligned(a : 32) reduction(+:s) \
testsuite/libgomp.c/collapse-1.c:13:  #pragma omp parallel for collapse(4 - 1) schedule(static, 4)
testsuite/libgomp.c/collapse-1.c:18:  #pragma omp parallel
testsuite/libgomp.c/collapse-1.c:20:      #pragma omp for collapse(2) reduction(|:l) private(k)
testsuite/libgomp.c/cancel-taskgroup-1.c:17:    #pragma omp task shared(ret) if(lvl < 10)
testsuite/libgomp.c/cancel-taskgroup-1.c:22:      #pragma omp atomic write
testsuite/libgomp.c/cancel-taskgroup-1.c:24:      #pragma omp cancel taskgroup
testsuite/libgomp.c/cancel-taskgroup-1.c:27:  #pragma omp taskwait
testsuite/libgomp.c/cancel-taskgroup-1.c:35:  #pragma omp parallel shared(ret) firstprivate (tree, val)
testsuite/libgomp.c/cancel-taskgroup-1.c:36:  #pragma omp single
testsuite/libgomp.c/cancel-taskgroup-1.c:37:  #pragma omp taskgroup
testsuite/libgomp.c/pr24455.c:8:#pragma omp threadprivate(i)
testsuite/libgomp.c/pr24455.c:14:#pragma omp parallel default(none) num_threads(10)
testsuite/libgomp.c/pr24455.c:17:#pragma omp barrier
testsuite/libgomp.c/icv-2.c:26:  #pragma omp parallel num_threads (6) reduction (|:l)
testsuite/libgomp.c/pr32362-3.c:18:#pragma omp parallel private(b)
testsuite/libgomp.c/pr32362-3.c:21:#pragma omp parallel firstprivate(a)
testsuite/libgomp.c/atomic-12.c:9:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:13:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:17:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:21:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:25:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:29:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:38:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:40:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:42:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:44:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:46:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:50:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:54:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:58:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:62:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:64:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:66:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:68:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:70:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:74:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:78:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:82:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-12.c:91:  #pragma omp atomic write
testsuite/libgomp.c/atomic-12.c:93:  #pragma omp atomic write
testsuite/libgomp.c/pr35549.c:13:  #pragma omp parallel shared (i) num_threads (3)
testsuite/libgomp.c/pr35549.c:16:      #pragma omp atomic
testsuite/libgomp.c/pr35549.c:18:    #pragma omp parallel shared (i) num_threads (4)
testsuite/libgomp.c/pr35549.c:21:       #pragma omp atomic
testsuite/libgomp.c/pr35549.c:23:      #pragma omp critical
testsuite/libgomp.c/reduction-6.c:13:  #pragma omp parallel for reduction (min:f) reduction (max:j)
testsuite/libgomp.c/loop-10.c:8:  #pragma omp for
testsuite/libgomp.c/loop-10.c:11:  #pragma omp for
testsuite/libgomp.c/loop-10.c:19:  #pragma omp parallel private (i) reduction (+:k)
testsuite/libgomp.c/loop-10.c:22:    #pragma omp for
testsuite/libgomp.c/pr26943-4.c:19:#pragma omp parallel num_threads (2) reduction (+:l) \
testsuite/libgomp.c/pr26943-4.c:23:#pragma omp parallel for shared (a, e) firstprivate (b, f) \
testsuite/libgomp.c/pr26943-4.c:32:#pragma omp atomic
testsuite/libgomp.c/pr26943-4.c:37:#pragma omp atomic
testsuite/libgomp.c/pr32362-1.c:16:#pragma omp parallel private(b)
testsuite/libgomp.c/pr32362-1.c:19:#pragma omp parallel firstprivate(a)
testsuite/libgomp.c/pr33880.c:16:  #pragma omp parallel for num_threads(4)
testsuite/libgomp.c/pr33880.c:18:      #pragma omp atomic
testsuite/libgomp.c/pr33880.c:22:  #pragma omp parallel for lastprivate(i) num_threads(2)
testsuite/libgomp.c/pr33880.c:24:      #pragma omp atomic
testsuite/libgomp.c/pr33880.c:48:  #pragma omp parallel for num_threads(4)
testsuite/libgomp.c/pr33880.c:50:      #pragma omp atomic
testsuite/libgomp.c/pr33880.c:63:  #pragma omp parallel for num_threads(4)
testsuite/libgomp.c/pr33880.c:65:      #pragma omp atomic
testsuite/libgomp.c/pr33880.c:70:  #pragma omp parallel for num_threads(2) lastprivate(i)
testsuite/libgomp.c/pr33880.c:72:      #pragma omp atomic
testsuite/libgomp.c/pr33880.c:107:  #pragma omp parallel for num_threads(8) lastprivate(i)
testsuite/libgomp.c/pr33880.c:109:    #pragma omp atomic
testsuite/libgomp.c/cancel-taskgroup-2.c:11:  #pragma omp parallel
testsuite/libgomp.c/cancel-taskgroup-2.c:12:  #pragma omp taskgroup
testsuite/libgomp.c/cancel-taskgroup-2.c:13:  #pragma omp task
testsuite/libgomp.c/cancel-taskgroup-2.c:15:    #pragma omp cancel taskgroup
testsuite/libgomp.c/cancel-taskgroup-2.c:19:  #pragma omp parallel
testsuite/libgomp.c/cancel-taskgroup-2.c:21:    #pragma omp barrier
testsuite/libgomp.c/cancel-taskgroup-2.c:22:    #pragma omp single
testsuite/libgomp.c/cancel-taskgroup-2.c:23:    #pragma omp taskgroup
testsuite/libgomp.c/cancel-taskgroup-2.c:27:    #pragma omp task
testsuite/libgomp.c/cancel-taskgroup-2.c:29:      #pragma omp cancellation point taskgroup
testsuite/libgomp.c/cancel-taskgroup-2.c:31:      #pragma omp cancel taskgroup if (i > 5)
testsuite/libgomp.c/pr26943-3.c:19:#pragma omp parallel num_threads (2) reduction (+:l)
testsuite/libgomp.c/pr26943-3.c:22:#pragma omp parallel for shared (a, e) firstprivate (b, f) \
testsuite/libgomp.c/pr26943-3.c:31:#pragma omp atomic
testsuite/libgomp.c/pr26943-3.c:36:#pragma omp atomic
testsuite/libgomp.c/nestedfn-6.c:10:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c/nestedfn-6.c:15:#pragma omp parallel for lastprivate (j)
testsuite/libgomp.c/task-1.c:9:#pragma omp task private(j, m) shared(k, n)
testsuite/libgomp.c/task-1.c:14:      #pragma omp atomic
testsuite/libgomp.c/task-1.c:17:#pragma omp taskwait
testsuite/libgomp.c/task-1.c:29:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c/task-1.c:31:  #pragma omp section
testsuite/libgomp.c/task-1.c:35:      #pragma omp task
testsuite/libgomp.c/task-1.c:40:      #pragma omp taskwait
testsuite/libgomp.c/task-1.c:53:#pragma omp task private(j, m) shared(k, n) untied
testsuite/libgomp.c/task-1.c:58:      #pragma omp atomic
testsuite/libgomp.c/task-1.c:61:#pragma omp taskwait
testsuite/libgomp.c/task-1.c:74:#pragma omp parallel num_threads(4)
testsuite/libgomp.c/task-1.c:76:    #pragma omp master
testsuite/libgomp.c/simd-12.c:10:  #pragma omp parallel
testsuite/libgomp.c/simd-12.c:11:  #pragma omp for simd linear(k : 3) reduction(+: s) schedule (static, 16)
testsuite/libgomp.c/loop-11.c:11:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:18:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:25:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:32:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:39:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:46:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:53:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:60:#pragma omp parallel for
testsuite/libgomp.c/loop-11.c:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c/loop-11.c:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c/loop-11.c:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/loop-11.c:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c/lib-1.c:69:#pragma omp parallel reduction (|:l)
testsuite/libgomp.c/lib-1.c:74:#pragma omp master
testsuite/libgomp.c/lib-1.c:84:#pragma omp parallel reduction (|:l)
testsuite/libgomp.c/lib-1.c:86:#pragma omp parallel reduction (|:l) if (1)
testsuite/libgomp.c/omp_workshare3.c:29:#pragma omp parallel for     \
testsuite/libgomp.c/omp-parallel-for.c:9:#pragma omp parallel for firstprivate (a) lastprivate (a) \
testsuite/libgomp.c/pr36802-3.c:13:#pragma omp parallel shared (i) num_threads (3)
testsuite/libgomp.c/pr36802-3.c:18:    #pragma omp atomic
testsuite/libgomp.c/pr36802-3.c:21:    #pragma omp for
testsuite/libgomp.c/pr36802-3.c:24:     #pragma omp parallel shared (i) num_threads (4)
testsuite/libgomp.c/pr36802-3.c:27:         #pragma omp atomic
testsuite/libgomp.c/pr36802-3.c:29:         #pragma omp critical
testsuite/libgomp.c/pr36802-3.c:33:     #pragma omp atomic
testsuite/libgomp.c/omp-loop01.c:24:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c/omp-loop01.c:26:#pragma omp for
testsuite/libgomp.c/omp-loop01.c:40:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c/omp-loop01.c:42:#pragma omp for
testsuite/libgomp.c/omp-loop01.c:56:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c/omp-loop01.c:58:#pragma omp for
testsuite/libgomp.c/omp-loop01.c:72:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c/omp-loop01.c:74:#pragma omp for
testsuite/libgomp.c/pr35130.c:16:#pragma omp parallel for
testsuite/libgomp.c/pr35130.c:35:#pragma omp parallel for
testsuite/libgomp.c/pr35130.c:62:#pragma omp parallel
testsuite/libgomp.c/pr35130.c:64:  #pragma omp single
testsuite/libgomp.c/pr35130.c:69:  #pragma omp parallel
testsuite/libgomp.c/pr35130.c:71:    #pragma omp single
testsuite/libgomp.c/pr35130.c:93:  #pragma omp parallel
testsuite/libgomp.c/pr35130.c:95:    #pragma omp single
testsuite/libgomp.c/pr35130.c:100:    #pragma omp parallel
testsuite/libgomp.c/pr35130.c:102:      #pragma omp single
testsuite/libgomp.c/pr49898-1.c:10:#pragma omp parallel
testsuite/libgomp.c/pr49898-1.c:12:  #pragma omp for reduction(+:sum)
testsuite/libgomp.c/pr49898-1.c:15:      #pragma omp parallel
testsuite/libgomp.c/pr49898-1.c:17:     #pragma omp for reduction(+:sum)
testsuite/libgomp.c/omp_workshare1.c:27:#pragma omp parallel shared(a,b,c,nthreads,chunk) private(i,tid)
testsuite/libgomp.c/omp_workshare1.c:37:  #pragma omp for schedule(dynamic,chunk)
testsuite/libgomp.c/cancel-parallel-1.c:10:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c/cancel-parallel-1.c:12:    #pragma omp cancel parallel
testsuite/libgomp.c/simd-13.c:10:  #pragma omp parallel for simd linear(k : 3) reduction(+: s) schedule (static, 16)
testsuite/libgomp.c/collapse-2.c:12:  #pragma omp parallel for num_threads (8) collapse(3) \
testsuite/libgomp.c/pr39591-2.c:12:#pragma omp task
testsuite/libgomp.c/pr39591-2.c:17:#pragma omp atomic
testsuite/libgomp.c/pr39591-2.c:25:#pragma omp parallel
testsuite/libgomp.c/pr39591-2.c:32:#pragma omp for schedule (dynamic)
testsuite/libgomp.c/loop-3.c:15:  #pragma omp for lastprivate (i)
testsuite/libgomp.c/pr48591.c:12:  #pragma omp parallel for reduction(+:f)
testsuite/libgomp.c/pr48591.c:17:  #pragma omp atomic
testsuite/libgomp.c/collapse-3.c:14:  #pragma omp parallel for collapse(4 - 1) schedule(static, 4)
testsuite/libgomp.c/collapse-3.c:19:  #pragma omp parallel
testsuite/libgomp.c/collapse-3.c:21:      #pragma omp for collapse(2) reduction(|:l)
testsuite/libgomp.c/simd-2.c:13:  #pragma omp simd private (v) safelen(16)
testsuite/libgomp.c/nested-2.c:11:#pragma omp parallel num_threads (4)
testsuite/libgomp.c/nested-2.c:13:#pragma omp single
testsuite/libgomp.c/nested-2.c:16:#pragma omp parallel num_threads (2)
testsuite/libgomp.c/nested-2.c:18:#pragma omp single
testsuite/libgomp.c/lock-2.c:10:#pragma omp parallel reduction (+:l) num_threads (1)
testsuite/libgomp.c/lock-2.c:16:  #pragma omp task if (0) shared (lock, l)
testsuite/libgomp.c/lock-2.c:21:  #pragma omp taskwait
testsuite/libgomp.c/pr58756.c:14:  #pragma omp parallel for reduction(+: c)
testsuite/libgomp.c/pr58756.c:18:       #pragma omp simd reduction(+: c) safelen(1)
testsuite/libgomp.c/pr58756.c:29:  #pragma omp parallel for simd reduction(+: c) safelen(1)
testsuite/libgomp.c/pr58756.c:39:  #pragma omp simd reduction(+: c) safelen(1)
testsuite/libgomp.c/simd-5.c:9:#pragma omp declare reduction (+:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-5.c:10:#pragma omp declare reduction (foo:struct S:omp_out.s += omp_in.s)
testsuite/libgomp.c/simd-5.c:11:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c/simd-5.c:19:  #pragma omp simd aligned(a : 32) reduction(+:s, q) reduction(foo:t, u) \
testsuite/libgomp.c/appendix-a/a.15.1.c:15:#pragma omp barrier
testsuite/libgomp.c/appendix-a/a.15.1.c:22:#pragma omp parallel shared(k)
testsuite/libgomp.c/appendix-a/a.15.1.c:30:#pragma omp parallel private(i) shared(n)
testsuite/libgomp.c/appendix-a/a.15.1.c:32:#pragma omp for
testsuite/libgomp.c/appendix-a/a.33.3.c:10:#pragma omp single copyprivate(lock_ptr)
testsuite/libgomp.c/appendix-a/a.36.1.c:16:#pragma omp parallel shared(x, npoints) private(iam, ipoints)
testsuite/libgomp.c/appendix-a/a.19.1.c:9:#pragma omp flush
testsuite/libgomp.c/appendix-a/a.19.1.c:18:#pragma omp barrier
testsuite/libgomp.c/appendix-a/a.19.1.c:20:#pragma omp barrier
testsuite/libgomp.c/appendix-a/a.19.1.c:32:#pragma omp parallel reduction(+: sum) num_threads(2)
testsuite/libgomp.c/appendix-a/a.26.1.c:10:#pragma omp parallel private(i) firstprivate(j)
testsuite/libgomp.c/appendix-a/a.4.1.c:17:#pragma omp parallel default(shared) private(iam,nt,ipoints,istart)
testsuite/libgomp.c/appendix-a/a.29.1.c:12:#pragma omp parallel firstprivate(B, C, D, E)
testsuite/libgomp.c/appendix-a/a.39.1.c:20:#pragma omp parallel shared(lck) private(id)
testsuite/libgomp.c/appendix-a/a.18.1.c:30:#pragma omp parallel private(iam,neighbor) shared(work,synch)
testsuite/libgomp.c/appendix-a/a.18.1.c:34:#pragma omp barrier
testsuite/libgomp.c/appendix-a/a.18.1.c:41:#pragma omp flush(work,synch)
testsuite/libgomp.c/appendix-a/a.18.1.c:43:#pragma omp flush(synch)
testsuite/libgomp.c/appendix-a/a.18.1.c:52:#pragma omp flush(synch)
testsuite/libgomp.c/appendix-a/a.18.1.c:54:#pragma omp flush(work,synch)
testsuite/libgomp.c/appendix-a/a.2.1.c:12:#pragma omp parallel num_threads(2) shared(x, bad)
testsuite/libgomp.c/appendix-a/a.2.1.c:26:#pragma omp barrier
testsuite/libgomp.c/appendix-a/a.16.1.c:21:#pragma omp parallel for shared(x, y, index, n)
testsuite/libgomp.c/appendix-a/a.16.1.c:24:#pragma omp atomic
testsuite/libgomp.c/appendix-a/a.5.1.c:8:#pragma omp parallel num_threads(10)
testsuite/libgomp.c/appendix-a/a.21.1.c:7:#pragma omp ordered
testsuite/libgomp.c/appendix-a/a.21.1.c:15:#pragma omp parallel for ordered schedule(dynamic)
testsuite/libgomp.c/appendix-a/a.40.1.c:41:#pragma omp parallel sections
testsuite/libgomp.c/appendix-a/a.40.1.c:43:#pragma omp section
testsuite/libgomp.c/appendix-a/a.40.1.c:45:#pragma omp section
testsuite/libgomp.c/lock-1.c:14:#pragma omp parallel if (0) reduction (+:l)
testsuite/libgomp.c/pr42942.c:16:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:21:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:30:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:35:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:44:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:49:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/pr42942.c:54:#pragma omp parallel num_threads(2) reduction(|:e)
testsuite/libgomp.c/reduction-3.c:9:#pragma omp parallel num_threads(4)
testsuite/libgomp.c/reduction-3.c:11:#pragma omp single
testsuite/libgomp.c/reduction-3.c:18:#pragma omp for reduction(+:i) reduction(*:d) reduction(&:k) nowait
testsuite/libgomp.c/reduction-3.c:22:#pragma omp atomic
testsuite/libgomp.c/reduction-3.c:35:#pragma omp barrier
testsuite/libgomp.c/reduction-3.c:37:#pragma omp atomic
testsuite/libgomp.c/reduction-3.c:40:#pragma omp atomic
testsuite/libgomp.c/reduction-3.c:43:#pragma omp atomic
testsuite/libgomp.c/loop-7.c:21:  #pragma omp for schedule(dynamic,1) collapse(2) nowait
testsuite/libgomp.c/loop-7.c:36:  #pragma omp for schedule(guided,1) collapse(2) nowait
testsuite/libgomp.c/loop-7.c:51:  #pragma omp for schedule(static,1) collapse(2) nowait
testsuite/libgomp.c/loop-7.c:66:  #pragma omp for schedule(static) collapse(2) nowait
testsuite/libgomp.c/loop-7.c:81:  #pragma omp for schedule(runtime) collapse(2) nowait
testsuite/libgomp.c/pr58392.c:14:  #pragma omp parallel for reduction(+: c)
testsuite/libgomp.c/pr58392.c:18:       #pragma omp simd reduction(+: c)
testsuite/libgomp.c/pr58392.c:29:  #pragma omp parallel for simd reduction(+: c)
testsuite/libgomp.c/pr58392.c:39:  #pragma omp simd reduction(+: c)
testsuite/libgomp.c/omp-loop03.c:9:#pragma omp barrier
testsuite/libgomp.c/omp-loop03.c:10:#pragma omp for lastprivate (a)
testsuite/libgomp.c/omp-loop03.c:22:#pragma omp parallel num_threads (64)
testsuite/libgomp.c/depend-1.c:7:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:8:  #pragma omp single
testsuite/libgomp.c/depend-1.c:10:    #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:12:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:21:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:22:  #pragma omp single
testsuite/libgomp.c/depend-1.c:25:    #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:27:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:30:    #pragma omp taskwait
testsuite/libgomp.c/depend-1.c:37:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:40:    #pragma omp single
testsuite/libgomp.c/depend-1.c:42:      #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:44:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:54:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:55:  #pragma omp single
testsuite/libgomp.c/depend-1.c:58:    #pragma omp task depend(out: x)
testsuite/libgomp.c/depend-1.c:60:    #pragma omp task depend(in: x)
testsuite/libgomp.c/depend-1.c:70:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:71:  #pragma omp single
testsuite/libgomp.c/depend-1.c:73:    #pragma omp task shared(x) depend(in: x)
testsuite/libgomp.c/depend-1.c:76:    #pragma omp task shared(x) depend(out: x)
testsuite/libgomp.c/depend-1.c:84:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:85:  #pragma omp single
testsuite/libgomp.c/depend-1.c:88:    #pragma omp taskgroup
testsuite/libgomp.c/depend-1.c:90:      #pragma omp task shared(x) depend(in: x)
testsuite/libgomp.c/depend-1.c:93:      #pragma omp task shared(x) depend(out: x)
testsuite/libgomp.c/depend-1.c:102:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:105:    #pragma omp single
testsuite/libgomp.c/depend-1.c:107:      #pragma omp task shared(x) depend(in: x)
testsuite/libgomp.c/depend-1.c:110:      #pragma omp task shared(x) depend(out: x)
testsuite/libgomp.c/depend-1.c:120:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:121:  #pragma omp single
testsuite/libgomp.c/depend-1.c:124:    #pragma omp task shared(x) depend(out: x)
testsuite/libgomp.c/depend-1.c:126:    #pragma omp task shared(x) depend(out: x)
testsuite/libgomp.c/depend-1.c:128:    #pragma omp taskwait
testsuite/libgomp.c/depend-1.c:138:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:139:  #pragma omp single
testsuite/libgomp.c/depend-1.c:141:    #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:143:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:146:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:149:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:158:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:159:  #pragma omp single
testsuite/libgomp.c/depend-1.c:162:    #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:164:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:167:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:170:    #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:173:    #pragma omp taskwait
testsuite/libgomp.c/depend-1.c:180:  #pragma omp parallel
testsuite/libgomp.c/depend-1.c:183:    #pragma omp single
testsuite/libgomp.c/depend-1.c:185:      #pragma omp task shared (x) depend(out: x)
testsuite/libgomp.c/depend-1.c:187:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:190:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/depend-1.c:193:      #pragma omp task shared (x) depend(in: x)
testsuite/libgomp.c/nestedfn-2.c:12:#pragma omp master
testsuite/libgomp.c/atomic-6.c:17:#pragma omp atomic
testsuite/libgomp.c/pr35625.c:8:#pragma omp parallel
testsuite/libgomp.c/pr35625.c:10:    #pragma omp for schedule (guided, 10)
testsuite/libgomp.c/pr35625.c:13:    #pragma omp for schedule (guided, 10)
testsuite/libgomp.c/loop-13.c:14:  #pragma omp for reduction(+: l)
testsuite/libgomp.c/loop-13.c:19:  #pragma omp parallel for reduction(+: l)
testsuite/libgomp.c/loop-13.c:24:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:31:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:38:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:45:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:52:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:59:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:73:  #pragma omp for reduction(+: l)
testsuite/libgomp.c/loop-13.c:78:  #pragma omp parallel for reduction(+: l)
testsuite/libgomp.c/loop-13.c:83:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:90:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:97:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:104:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:111:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:118:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:132:  #pragma omp for reduction(+: l)
testsuite/libgomp.c/loop-13.c:137:  #pragma omp parallel for reduction(+: l)
testsuite/libgomp.c/loop-13.c:142:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:149:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:156:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:163:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:170:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:177:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:191:  #pragma omp for reduction(+: l)
testsuite/libgomp.c/loop-13.c:196:  #pragma omp parallel for reduction(+: l)
testsuite/libgomp.c/loop-13.c:201:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:208:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:215:  #pragma omp for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:222:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:229:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/loop-13.c:236:  #pragma omp parallel for reduction(+: l) collapse(3)
testsuite/libgomp.c/target-5.c:25:  #pragma omp target if (0)
testsuite/libgomp.c/target-5.c:54:  #pragma omp target if (0)
testsuite/libgomp.c/target-5.c:55:  #pragma omp teams
testsuite/libgomp.c/pr49897-2.c:10:#pragma omp parallel for reduction(+:sum) firstprivate(x) lastprivate(x, y)
testsuite/libgomp.c/pr49897-2.c:15:    #pragma omp parallel for reduction(+:sum) firstprivate(y) lastprivate(y)
testsuite/libgomp.c/atomic-14.c:16:  #pragma omp atomic update
testsuite/libgomp.c/atomic-14.c:18:  #pragma omp atomic
testsuite/libgomp.c/atomic-14.c:20:  #pragma omp atomic update
testsuite/libgomp.c/atomic-14.c:22:  #pragma omp atomic
testsuite/libgomp.c/atomic-14.c:24:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:28:  #pragma omp atomic write
testsuite/libgomp.c/atomic-14.c:30:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:37:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:44:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:48:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:55:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:59:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:63:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:67:  #pragma omp atomic
testsuite/libgomp.c/atomic-14.c:69:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:74:  #pragma omp atomic update
testsuite/libgomp.c/atomic-14.c:76:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:80:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:87:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:94:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:98:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:105:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:112:  #pragma omp atomic read
testsuite/libgomp.c/atomic-14.c:116:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:118:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:120:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:122:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:126:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:128:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:130:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-14.c:132:  #pragma omp atomic capture
testsuite/libgomp.c/simd-14.c:11:  #pragma omp simd linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:20:  #pragma omp simd linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-14.c:29:  #pragma omp simd linear(i) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:38:  #pragma omp simd linear(i:4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-14.c:47:  #pragma omp simd collapse (2) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:57:  #pragma omp simd collapse (2) lastprivate (i, j) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:67:  #pragma omp parallel for simd schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:76:  #pragma omp parallel for simd schedule (static, 4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-14.c:85:  #pragma omp parallel for simd schedule (static, 4) linear(i) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:94:  #pragma omp parallel for simd schedule (static, 4) linear(i:4) linear(b:3) reduction(+:c)
testsuite/libgomp.c/simd-14.c:103:  #pragma omp parallel for simd lastprivate (i, j) collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/simd-14.c:113:  #pragma omp parallel for simd collapse (2) schedule (static, 4) linear(b:2) reduction(+:c)
testsuite/libgomp.c/pr32362-2.c:17:#pragma omp parallel private(b)
testsuite/libgomp.c/pr32362-2.c:20:#pragma omp parallel firstprivate(a)
testsuite/libgomp.c/simd-10.c:11:  #pragma omp for simd schedule(static, 32) reduction(+:s) lastprivate(u)
testsuite/libgomp.c/pr39591-1.c:12:#pragma omp parallel
testsuite/libgomp.c/pr39591-1.c:19:#pragma omp for schedule(dynamic)
testsuite/libgomp.c/pr39591-1.c:21:#pragma omp task shared(array)
testsuite/libgomp.c/pr39591-1.c:26:#pragma omp atomic
testsuite/libgomp.c/atomic-11.c:12:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:16:  #pragma omp atomic write
testsuite/libgomp.c/atomic-11.c:18:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:22:  #pragma omp atomic update
testsuite/libgomp.c/atomic-11.c:24:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:28:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:32:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:36:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:40:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:44:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:48:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:52:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:59:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:63:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:67:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:71:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:78:#pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:81:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:85:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:89:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:93:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:100:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:103:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:107:  #pragma omp atomic write
testsuite/libgomp.c/atomic-11.c:109:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:113:  #pragma omp atomic update
testsuite/libgomp.c/atomic-11.c:115:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:119:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:123:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:127:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:131:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:135:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:139:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:143:  #pragma omp atomic read
testsuite/libgomp.c/atomic-11.c:147:  #pragma omp atomic capture
testsuite/libgomp.c/atomic-11.c:151:  #pragma omp atomic read
testsuite/libgomp.c/pr32468.c:13:#pragma omp parallel
testsuite/libgomp.c/pr32468.c:15:    #pragma omp sections
testsuite/libgomp.c/pr32468.c:17:       #pragma omp section
testsuite/libgomp.c/pr32468.c:19:       #pragma omp section
testsuite/libgomp.c/loop-14.c:14:  #pragma omp for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:19:  #pragma omp parallel for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:24:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:31:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:38:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:45:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:52:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:59:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:73:  #pragma omp for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:78:  #pragma omp parallel for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:83:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:90:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:97:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:104:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:111:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:118:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:132:  #pragma omp for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:137:  #pragma omp parallel for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:142:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:149:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:156:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:163:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:170:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:177:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:191:  #pragma omp for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:196:  #pragma omp parallel for reduction(+: l) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:201:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:208:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:215:  #pragma omp for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:222:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:229:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/loop-14.c:236:  #pragma omp parallel for reduction(+: l) collapse(3) schedule(static, 2)
testsuite/libgomp.c/sections-2.c:17:  #pragma omp parallel
testsuite/libgomp.c/sections-2.c:19:    #pragma omp sections
testsuite/libgomp.c/sections-2.c:22:      #pragma omp section
testsuite/libgomp.c/sections-2.c:24:      #pragma omp section
testsuite/libgomp.c/task-2.c:11:  #pragma omp task
testsuite/libgomp.c/task-2.c:15:      #pragma omp atomic
testsuite/libgomp.c/task-2.c:18:  #pragma omp taskwait
testsuite/libgomp.c/task-2.c:31:  #pragma omp task
testsuite/libgomp.c/task-2.c:34:      #pragma omp atomic
testsuite/libgomp.c/task-2.c:37:  #pragma omp taskwait
testsuite/libgomp.c/task-2.c:45:  #pragma omp parallel num_threads(4) reduction(+:e)
testsuite/libgomp.c/shared-2.c:16:  #pragma omp parallel firstprivate (a,b) shared (bad) num_threads (5)
testsuite/libgomp.c/shared-2.c:21:      #pragma omp for lastprivate (LASTPRIV)
testsuite/libgomp.c/shared-2.c:25:      #pragma omp sections lastprivate (LASTPRIV_SEC)
testsuite/libgomp.c/shared-2.c:27:        #pragma omp section
testsuite/libgomp.c/shared-2.c:30:        #pragma omp section
testsuite/libgomp.c/thread-limit-2.c:13:  #pragma omp parallel num_threads (8)
testsuite/libgomp.c/thread-limit-2.c:16:  #pragma omp parallel num_threads (16)
testsuite/libgomp.c/thread-limit-2.c:19:  #pragma omp target if (0)
testsuite/libgomp.c/thread-limit-2.c:20:  #pragma omp teams thread_limit (6)
testsuite/libgomp.c/thread-limit-2.c:28:        #pragma omp parallel num_threads (3)
testsuite/libgomp.c/thread-limit-2.c:31:        #pragma omp parallel num_threads (3)
testsuite/libgomp.c/thread-limit-2.c:34:        #pragma omp parallel num_threads (8)
testsuite/libgomp.c/thread-limit-2.c:37:        #pragma omp parallel num_threads (6)
testsuite/libgomp.c/thread-limit-2.c:41:        #pragma omp parallel num_threads (5)
testsuite/libgomp.c/thread-limit-2.c:42:        #pragma omp parallel num_threads (5)
testsuite/libgomp.c/thread-limit-2.c:43:        #pragma omp parallel num_threads (2)
testsuite/libgomp.c/thread-limit-2.c:46:          #pragma omp atomic capture
testsuite/libgomp.c/thread-limit-2.c:51:          #pragma omp atomic
testsuite/libgomp.c/for-2.h:19:#pragma omp F S
testsuite/libgomp.c/for-2.h:27:#pragma omp F S
testsuite/libgomp.c/for-2.h:36:#pragma omp F S
testsuite/libgomp.c/for-2.h:45:#pragma omp F S
testsuite/libgomp.c/for-2.h:54:#pragma omp F S
testsuite/libgomp.c/for-2.h:64:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:77:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:89:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:101:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:112:#pragma omp F S
testsuite/libgomp.c/for-2.h:125:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:140:#pragma omp F S
testsuite/libgomp.c/for-2.h:153:#pragma omp F S collapse(3)
testsuite/libgomp.c/for-2.h:168:#pragma omp F S
testsuite/libgomp.c/for-2.h:177:#pragma omp F S collapse(3)
testsuite/libgomp.c/omp-single-2.c:18:  #pragma omp parallel private (i, x) shared (bad)
testsuite/libgomp.c/omp-single-2.c:22:      #pragma omp single copyprivate (i, x)
testsuite/libgomp.c/simd-11.c:11:  #pragma omp for simd schedule(static, 32) reduction(+:s) lastprivate(u) collapse(2)
testsuite/libgomp.c/target-7.c:11:  #pragma omp target device (d)
testsuite/libgomp.c/target-7.c:14:  #pragma omp target if (v > 1)
testsuite/libgomp.c/target-7.c:17:  #pragma omp target device (d) if (v > 1)
testsuite/libgomp.c/target-7.c:20:  #pragma omp target if (v <= 1)
testsuite/libgomp.c/target-7.c:23:  #pragma omp target device (d) if (v <= 1)
testsuite/libgomp.c/target-7.c:26:  #pragma omp target if (0)
testsuite/libgomp.c/target-7.c:29:  #pragma omp target device (d) if (0)
testsuite/libgomp.c/target-7.c:32:  #pragma omp target if (1)
testsuite/libgomp.c/target-7.c:35:  #pragma omp target device (d) if (1)
testsuite/libgomp.c/target-7.c:38:  #pragma omp target data device (d) map (to: h)
testsuite/libgomp.c/target-7.c:40:    #pragma omp target device (d)
testsuite/libgomp.c/target-7.c:43:    #pragma omp target update device (d) from (h)
testsuite/libgomp.c/target-7.c:45:  #pragma omp target data if (v > 1) map (to: h)
testsuite/libgomp.c/target-7.c:47:    #pragma omp target if (v > 1)
testsuite/libgomp.c/target-7.c:50:    #pragma omp target update if (v > 1) from (h)
testsuite/libgomp.c/target-7.c:52:  #pragma omp target data device (d) if (v > 1) map (to: h)
testsuite/libgomp.c/target-7.c:54:    #pragma omp target device (d) if (v > 1)
testsuite/libgomp.c/target-7.c:57:    #pragma omp target update device (d) if (v > 1) from (h)
testsuite/libgomp.c/target-7.c:59:  #pragma omp target data if (v <= 1) map (to: h)
testsuite/libgomp.c/target-7.c:61:    #pragma omp target if (v <= 1)
testsuite/libgomp.c/target-7.c:64:    #pragma omp target update if (v <= 1) from (h)
testsuite/libgomp.c/target-7.c:66:  #pragma omp target data device (d) if (v <= 1) map (to: h)
testsuite/libgomp.c/target-7.c:68:    #pragma omp target device (d) if (v <= 1)
testsuite/libgomp.c/target-7.c:71:    #pragma omp target update device (d) if (v <= 1) from (h)
testsuite/libgomp.c/target-7.c:73:  #pragma omp target data if (0) map (to: h)
testsuite/libgomp.c/target-7.c:75:    #pragma omp target if (0)
testsuite/libgomp.c/target-7.c:78:    #pragma omp target update if (0) from (h)
testsuite/libgomp.c/target-7.c:80:  #pragma omp target data device (d) if (0) map (to: h)
testsuite/libgomp.c/target-7.c:82:    #pragma omp target device (d) if (0)
testsuite/libgomp.c/target-7.c:85:    #pragma omp target update device (d) if (0) from (h)
testsuite/libgomp.c/target-7.c:87:  #pragma omp target data if (1) map (to: h)
testsuite/libgomp.c/target-7.c:89:    #pragma omp target if (1)
testsuite/libgomp.c/target-7.c:92:    #pragma omp target update if (1) from (h)
testsuite/libgomp.c/target-7.c:94:  #pragma omp target data device (d) if (1) map (to: h)
testsuite/libgomp.c/target-7.c:96:    #pragma omp target device (d) if (1)
testsuite/libgomp.c/target-7.c:99:    #pragma omp target update device (d) if (1) from (h)
testsuite/libgomp.c/sort-1.c:165:  #pragma omp parallel firstprivate (array, count)
testsuite/libgomp.c/sort-1.c:276:  #pragma omp atomic
testsuite/libgomp.c/sort-1.c:279:  #pragma omp parallel num_threads (2) \
testsuite/libgomp.c/sort-1.c:287:       #pragma omp atomic
testsuite/libgomp.c/sort-1.c:299:  #pragma omp parallel
testsuite/libgomp.c/sort-1.c:300:    #pragma omp single nowait
testsuite/libgomp.c/sort-1.c:319:  #pragma omp task
testsuite/libgomp.c/sort-1.c:327:  #pragma omp parallel
testsuite/libgomp.c/sort-1.c:328:    #pragma omp single
testsuite/libgomp.c/sort-1.c:356:  #pragma omp parallel
testsuite/libgomp.c/sort-1.c:357:    #pragma omp single nowait
testsuite/libgomp.c/omp-nested-1.c:10:  #pragma omp parallel for num_threads(2) shared (i)
testsuite/libgomp.c/omp-nested-1.c:13:      #pragma omp parallel num_threads(1) shared (i)
testsuite/libgomp.c/omp-nested-1.c:15:  #pragma omp atomic
testsuite/libgomp.c/atomic-4.c:11:  #pragma omp parallel for shared (d)
testsuite/libgomp.c/atomic-4.c:13:      #pragma omp atomic
testsuite/libgomp.c/nested-1.c:11:#pragma omp parallel num_threads (4)
testsuite/libgomp.c/nested-1.c:13:#pragma omp single
testsuite/libgomp.c/nested-1.c:16:#pragma omp parallel num_threads (2)
testsuite/libgomp.c/nested-1.c:18:#pragma omp single
testsuite/libgomp.c/pr30494.c:15:      #pragma omp atomic
testsuite/libgomp.c/pr30494.c:19:      #pragma omp atomic
testsuite/libgomp.c/pr30494.c:27:#pragma omp for
testsuite/libgomp.c/pr30494.c:44:#pragma omp parallel for num_threads (4)
testsuite/libgomp.c/pr30494.c:60:#pragma omp parallel num_threads (3)
testsuite/libgomp.c/nestedfn-3.c:16:#pragma omp parallel if (foo ()) num_threads (bar ()) reduction (|:l)
testsuite/libgomp.c/nestedfn-3.c:22:#pragma omp parallel if (foo ()) num_threads (bar ()) reduction (|:l)
testsuite/libgomp.c/nestedfn-3.c:28:#pragma omp master
testsuite/libgomp.c/nestedfn-3.c:32:#pragma omp single
testsuite/libgomp.c/nestedfn-3.c:45:#pragma omp atomic
testsuite/libgomp.c/pr36802-2.c:13:#pragma omp parallel shared (i) num_threads (3)
testsuite/libgomp.c/pr36802-2.c:18:    #pragma omp atomic
testsuite/libgomp.c/pr36802-2.c:21:    #pragma omp for
testsuite/libgomp.c/pr36802-2.c:24:     #pragma omp atomic
testsuite/libgomp.c/pr36802-2.c:27:     #pragma omp parallel shared (i) num_threads (4)
testsuite/libgomp.c/pr36802-2.c:30:         #pragma omp atomic
testsuite/libgomp.c/pr36802-2.c:32:         #pragma omp critical
testsuite/libgomp.c/nested-3.c:23:#pragma omp parallel num_threads (4)
testsuite/libgomp.c/nested-3.c:39:      #pragma omp atomic
testsuite/libgomp.c/nested-3.c:41:    #pragma omp parallel if (0) num_threads(5) firstprivate(tn1)
testsuite/libgomp.c/nested-3.c:59:      #pragma omp atomic
testsuite/libgomp.c/nested-3.c:61:      #pragma omp parallel num_threads(2) firstprivate(tn1, tn2)
testsuite/libgomp.c/nested-3.c:81:        #pragma omp atomic
testsuite/libgomp.c/pr39591-3.c:12:#pragma omp task
testsuite/libgomp.c/pr39591-3.c:17:#pragma omp atomic
testsuite/libgomp.c/pr39591-3.c:29:#pragma omp parallel
testsuite/libgomp.c/pr39591-3.c:33:#pragma omp for schedule (dynamic)
testsuite/libgomp.c++/nested-1.C:10:  #pragma omp parallel for num_threads(2) shared (i)
testsuite/libgomp.c++/nested-1.C:13:      #pragma omp parallel num_threads(1) shared (i)
testsuite/libgomp.c++/nested-1.C:15:    #pragma omp atomic
testsuite/libgomp.c++/atomic-15.C:11:  #pragma omp atomic seq_cst
testsuite/libgomp.c++/atomic-15.C:13:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-15.C:17:  #pragma omp atomic seq_cst update
testsuite/libgomp.c++/atomic-15.C:19:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-15.C:23:  #pragma omp atomic seq_cst, capture
testsuite/libgomp.c++/atomic-15.C:27:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-15.C:31:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-15.C:35:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-15.C:39:  #pragma omp atomic seq_cst read
testsuite/libgomp.c++/atomic-15.C:43:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-15.C:47:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-15.C:51:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-15.C:55:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-15.C:59:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-15.C:63:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-15.C:67:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-15.C:71:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-15.C:75:  #pragma omp atomic seq_cst, read
testsuite/libgomp.c++/atomic-15.C:79:  #pragma omp atomic capture , seq_cst
testsuite/libgomp.c++/atomic-15.C:83:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-15.C:87:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-15.C:91:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-15.C:95:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-11.C:11:  #pragma omp atomic
testsuite/libgomp.c++/atomic-11.C:13:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:17:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-11.C:19:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:23:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:27:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:31:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:35:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:39:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:43:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:47:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:51:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:55:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:59:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:63:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:67:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:71:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:75:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:79:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:83:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-11.C:87:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:91:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-11.C:95:  #pragma omp atomic read
testsuite/libgomp.c++/simd-3.C:17:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s) \
testsuite/libgomp.c++/simd-3.C:27:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s2) \
testsuite/libgomp.c++/simd-3.C:47:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s) \
testsuite/libgomp.c++/simd-3.C:57:  #pragma omp simd aligned(a, b, p : 32) linear(k: m + 1) reduction(+:s2) \
testsuite/libgomp.c++/ctor-2.C:33:  #pragma omp atomic
testsuite/libgomp.c++/ctor-2.C:40:  #pragma omp atomic
testsuite/libgomp.c++/ctor-2.C:46:  #pragma omp atomic
testsuite/libgomp.c++/ctor-2.C:57:  #pragma omp parallel firstprivate(b)
testsuite/libgomp.c++/ctor-2.C:59:      #pragma omp master
testsuite/libgomp.c++/pr43893.C:13:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:27:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:41:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:55:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:69:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:76:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:83:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:90:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:97:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:104:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:111:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/pr43893.C:118:#pragma omp parallel for reduction(+:c)
testsuite/libgomp.c++/loop-5.C:12:  #pragma omp for
testsuite/libgomp.c++/task-4.C:11:    #pragma omp atomic
testsuite/libgomp.c++/task-4.C:26:  #pragma omp task firstprivate (p, q)
testsuite/libgomp.c++/task-4.C:33:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c++/shared-1.C:27:  #pragma omp parallel shared (a, b, A) num_threads (5)
testsuite/libgomp.c++/shared-1.C:31:      #pragma omp atomic
testsuite/libgomp.c++/shared-1.C:34:      #pragma omp atomic
testsuite/libgomp.c++/shared-1.C:37:      #pragma omp for private (j)
testsuite/libgomp.c++/cancel-parallel-2.C:12:  #pragma omp parallel firstprivate(x, c) num_threads (32) private (b)
testsuite/libgomp.c++/cancel-parallel-2.C:21:   #pragma omp cancel parallel
testsuite/libgomp.c++/cancel-parallel-2.C:24:   #pragma omp task
testsuite/libgomp.c++/cancel-parallel-2.C:26:   #pragma omp task
testsuite/libgomp.c++/cancel-parallel-2.C:28:   #pragma omp task
testsuite/libgomp.c++/cancel-parallel-2.C:35:   #pragma omp cancellation point parallel
testsuite/libgomp.c++/cancel-parallel-2.C:38:    #pragma omp barrier
testsuite/libgomp.c++/pr26691.C:14:#pragma omp parallel private (a) reduction (+:err)
testsuite/libgomp.c++/single-3.C:6:  #pragma omp single copyprivate(a) copyprivate(b)
testsuite/libgomp.c++/single-3.C:17:  #pragma omp parallel
testsuite/libgomp.c++/cancel-parallel-3.C:20:  #pragma omp parallel num_threads (16) private (b) firstprivate (c)
testsuite/libgomp.c++/cancel-parallel-3.C:27:    #pragma omp barrier
testsuite/libgomp.c++/cancel-parallel-3.C:31:   #pragma omp cancellation point parallel
testsuite/libgomp.c++/cancel-parallel-3.C:34:      #pragma omp for schedule (runtime) nowait
testsuite/libgomp.c++/cancel-parallel-3.C:40:   #pragma omp cancel parallel
testsuite/libgomp.c++/atomic-8.C:16:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-8.C:18:  #pragma omp atomic
testsuite/libgomp.c++/atomic-8.C:20:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-8.C:22:  #pragma omp atomic
testsuite/libgomp.c++/atomic-8.C:24:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:28:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-8.C:30:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:37:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:44:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:48:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:55:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:59:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:63:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:67:  #pragma omp atomic
testsuite/libgomp.c++/atomic-8.C:69:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:74:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-8.C:76:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:80:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:87:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:94:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:98:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:105:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:112:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-8.C:116:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:118:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:120:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:122:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:126:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:128:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:130:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-8.C:132:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:19:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-9.C:21:  #pragma omp atomic
testsuite/libgomp.c++/atomic-9.C:23:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-9.C:25:  #pragma omp atomic
testsuite/libgomp.c++/atomic-9.C:27:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:31:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-9.C:33:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:40:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:47:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:51:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:58:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:62:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:66:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:70:  #pragma omp atomic
testsuite/libgomp.c++/atomic-9.C:72:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:77:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-9.C:79:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:83:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:90:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:97:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:101:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:108:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:115:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-9.C:119:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:121:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:123:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:125:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:129:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:131:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:133:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-9.C:135:  #pragma omp atomic capture
testsuite/libgomp.c++/for-6.C:20:#pragma omp atomic
testsuite/libgomp.c++/for-6.C:30:#pragma omp atomic
testsuite/libgomp.c++/for-6.C:38:#pragma omp parallel for
testsuite/libgomp.c++/for-6.C:47:#pragma omp parallel for
testsuite/libgomp.c++/for-6.C:55:#pragma omp parallel for
testsuite/libgomp.c++/for-6.C:66:#pragma omp parallel for
testsuite/libgomp.c++/for-6.C:75:#pragma omp parallel for
testsuite/libgomp.c++/for-6.C:83:#pragma omp parallel for
testsuite/libgomp.c++/udr-5.C:11:    #pragma omp declare reduction (bar : int : omp_out += omp_in)
testsuite/libgomp.c++/udr-5.C:12:    #pragma omp parallel reduction (bar : s) reduction(S::operator+ : j)
testsuite/libgomp.c++/udr-5.C:16:  #pragma omp declare reduction (bar : S : baz (omp_out, omp_in))
testsuite/libgomp.c++/udr-5.C:30:    #pragma omp declare reduction (bar : int : omp_out += omp_in)
testsuite/libgomp.c++/udr-5.C:31:    #pragma omp parallel reduction (bar : t) reduction (S::bar : s) \
testsuite/libgomp.c++/udr-5.C:36:  #pragma omp declare reduction (bar : T<N> : baz (omp_out, omp_in))
testsuite/libgomp.c++/udr-2.C:15:    #pragma omp declare reduction (foo : U, S : omp_out.foo (omp_in, false))
testsuite/libgomp.c++/udr-2.C:16:    #pragma omp declare reduction (foo : int : omp_out += omp_in) \
testsuite/libgomp.c++/udr-2.C:24:      #pragma omp parallel num_threads (4) reduction (foo : s, v) \
testsuite/libgomp.c++/udr-2.C:41:  #pragma omp declare reduction (bar : S : omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-2.C:60:    #pragma omp parallel num_threads (4) reduction (foo:s) \
testsuite/libgomp.c++/udr-2.C:81:  #pragma omp parallel num_threads (4) reduction (bar:s) reduction (+:q)
testsuite/libgomp.c++/ctor-5.C:19:#pragma omp threadprivate(thr)
testsuite/libgomp.c++/ctor-5.C:25:  #pragma omp atomic
testsuite/libgomp.c++/ctor-5.C:36:  #pragma omp parallel copyin(thr)
testsuite/libgomp.c++/ctor-5.C:38:    #pragma omp master
testsuite/libgomp.c++/cancel-test.h:10:    #pragma omp atomic
testsuite/libgomp.c++/cancel-test.h:16:    #pragma omp atomic
testsuite/libgomp.c++/cancel-test.h:23:    #pragma omp atomic
testsuite/libgomp.c++/cancel-test.h:29:    #pragma omp atomic
testsuite/libgomp.c++/reduction-4.C:12:  #pragma omp parallel for reduction (min:f) reduction (max:j)
testsuite/libgomp.c++/reduction-4.C:35:  #pragma omp parallel for reduction (min:f) reduction (max:j)
testsuite/libgomp.c++/simd-6.C:15:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-6.C:17:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-6.C:19:#pragma omp declare reduction (foo:int:omp_out += omp_in) \
testsuite/libgomp.c++/simd-6.C:27:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u)
testsuite/libgomp.c++/simd-6.C:44:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u)
testsuite/libgomp.c++/reduction-3.C:9:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/reduction-3.C:11:#pragma omp single
testsuite/libgomp.c++/reduction-3.C:18:#pragma omp for reduction(+:i) reduction(*:d) reduction(&:k) nowait
testsuite/libgomp.c++/reduction-3.C:22:#pragma omp atomic
testsuite/libgomp.c++/reduction-3.C:35:#pragma omp barrier
testsuite/libgomp.c++/reduction-3.C:37:#pragma omp atomic
testsuite/libgomp.c++/reduction-3.C:40:#pragma omp atomic
testsuite/libgomp.c++/reduction-3.C:43:#pragma omp atomic
testsuite/libgomp.c++/for-4.C:36:#pragma omp parallel for
testsuite/libgomp.c++/for-4.C:46:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-4.C:56:#pragma omp parallel for schedule (dynamic, 6)
testsuite/libgomp.c++/for-4.C:67:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-4.C:76:#pragma omp parallel for schedule (static, 10)
testsuite/libgomp.c++/for-4.C:87:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/for-4.C:102:#pragma omp parallel for schedule (dynamic, 6)
testsuite/libgomp.c++/for-4.C:112:#pragma omp parallel for schedule (dynamic, 40)
testsuite/libgomp.c++/for-4.C:122:#pragma omp parallel for schedule (static, 25)
testsuite/libgomp.c++/for-4.C:133:#pragma omp parallel for
testsuite/libgomp.c++/for-4.C:142:#pragma omp parallel
testsuite/libgomp.c++/for-4.C:144:#pragma omp for nowait schedule (static, 2)
testsuite/libgomp.c++/for-4.C:147:#pragma omp single
testsuite/libgomp.c++/for-4.C:160:#pragma omp parallel for schedule (dynamic, 130)
testsuite/libgomp.c++/for-4.C:172:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/parallel-1.C:15:  #pragma omp parallel if (foo () > 10) shared (A)
testsuite/libgomp.c++/parallel-1.C:23:  #pragma omp parallel if (foo () == 10) num_threads (3) shared (A)
testsuite/libgomp.c++/parallel-1.C:31:  #pragma omp parallel if (foo () == 10) num_threads (foo ()) shared (A)
testsuite/libgomp.c++/atomic-5.C:10:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:14:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-5.C:22:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-5.C:26:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:30:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:41:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-5.C:43:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-5.C:45:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:49:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:53:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-5.C:55:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-5.C:57:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:61:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-5.C:72:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-5.C:74:  #pragma omp atomic write
testsuite/libgomp.c++/cancel-for-1.C:12:    #pragma omp parallel num_threads (32)
testsuite/libgomp.c++/cancel-for-1.C:16:      #pragma omp for private (b) firstprivate (c)
testsuite/libgomp.c++/cancel-for-1.C:20:          #pragma omp cancel for
testsuite/libgomp.c++/ctor-12.C:13:    #pragma omp atomic
testsuite/libgomp.c++/ctor-12.C:19:    #pragma omp atomic
testsuite/libgomp.c++/ctor-12.C:25:    #pragma omp atomic
testsuite/libgomp.c++/ctor-12.C:31:    #pragma omp atomic
testsuite/libgomp.c++/ctor-12.C:47:#pragma omp parallel private (a)
testsuite/libgomp.c++/ctor-12.C:50:    #pragma omp single copyprivate (a)
testsuite/libgomp.c++/ctor-12.C:56:    #pragma omp atomic
testsuite/libgomp.c++/for-3.C:38:#pragma omp parallel for
testsuite/libgomp.c++/for-3.C:48:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-3.C:58:#pragma omp parallel for schedule (dynamic, 6)
testsuite/libgomp.c++/for-3.C:69:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-3.C:78:#pragma omp parallel for schedule (static, 10)
testsuite/libgomp.c++/for-3.C:88:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/for-3.C:103:#pragma omp parallel for schedule (dynamic, 6)
testsuite/libgomp.c++/for-3.C:113:#pragma omp parallel for schedule (dynamic, 40)
testsuite/libgomp.c++/for-3.C:123:#pragma omp parallel for schedule (static, 25)
testsuite/libgomp.c++/for-3.C:134:#pragma omp parallel for
testsuite/libgomp.c++/for-3.C:143:#pragma omp parallel
testsuite/libgomp.c++/for-3.C:145:#pragma omp for nowait schedule (static, 2)
testsuite/libgomp.c++/for-3.C:148:#pragma omp single
testsuite/libgomp.c++/for-3.C:161:#pragma omp parallel for schedule (dynamic, 130)
testsuite/libgomp.c++/for-3.C:173:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/cancel-parallel-1.C:10:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c++/cancel-parallel-1.C:13:    #pragma omp cancel parallel
testsuite/libgomp.c++/single-2.C:16:  #pragma omp parallel private (i, x) shared (bad)
testsuite/libgomp.c++/single-2.C:20:      #pragma omp single copyprivate (i, x)
testsuite/libgomp.c++/atomic-2.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:16:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-2.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:22:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-2.C:24:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:28:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:32:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:36:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:40:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:44:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:48:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:52:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:59:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:63:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:67:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:71:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:78:#pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:81:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:85:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:89:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:93:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:100:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:103:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:107:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-2.C:109:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:113:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-2.C:115:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:119:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:123:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:127:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:131:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:135:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:139:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:143:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-2.C:147:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-2.C:151:  #pragma omp atomic read
testsuite/libgomp.c++/pr26943.C:21:  #pragma omp master
testsuite/libgomp.c++/pr26943.C:48:  #pragma omp sections firstprivate(x) lastprivate(x)
testsuite/libgomp.c++/pr26943.C:57:  #pragma omp parallel num_threads(2)
testsuite/libgomp.c++/pr49043.C:11:  #pragma omp parallel for reduction (+:r)
testsuite/libgomp.c++/task-5.C:23:    #pragma omp atomic
testsuite/libgomp.c++/task-5.C:36:    #pragma omp atomic
testsuite/libgomp.c++/task-5.C:48:  #pragma omp task firstprivate (j, b)
testsuite/libgomp.c++/task-5.C:56:  #pragma omp task firstprivate (j, b)
testsuite/libgomp.c++/task-5.C:66:  #pragma omp task firstprivate (a, c)
testsuite/libgomp.c++/task-5.C:78:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c++/task-5.C:80:      #pragma omp single
testsuite/libgomp.c++/loop-10.C:21:  #pragma omp for schedule(dynamic,1) collapse(2) nowait
testsuite/libgomp.c++/loop-10.C:36:  #pragma omp for schedule(guided,1) collapse(2) nowait
testsuite/libgomp.c++/loop-10.C:51:  #pragma omp for schedule(static,1) collapse(2) nowait
testsuite/libgomp.c++/loop-10.C:66:  #pragma omp for schedule(static) collapse(2) nowait
testsuite/libgomp.c++/loop-10.C:81:  #pragma omp for schedule(runtime) collapse(2) nowait
testsuite/libgomp.c++/for-11.C:6:#pragma omp declare target
testsuite/libgomp.c++/for-11.C:72:#pragma omp end declare target
testsuite/libgomp.c++/for-11.C:78:  #pragma omp target teams reduction(|:err)
testsuite/libgomp.c++/udr-4.C:12:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/udr-4.C:13:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/udr-4.C:14:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c++/udr-4.C:22:  #pragma omp parallel reduction(+:s, q) reduction(foo:t, u)
testsuite/libgomp.c++/udr-8.C:8:#pragma omp declare reduction (+:S:foo (&omp_out, &omp_in))
testsuite/libgomp.c++/udr-8.C:9:#pragma omp declare reduction (*:S:bar (omp_out, omp_in))
testsuite/libgomp.c++/udr-8.C:29:  #pragma omp parallel reduction (+:s, i) reduction (*:t)
testsuite/libgomp.c++/ctor-11.C:31:  #pragma omp atomic
testsuite/libgomp.c++/ctor-11.C:37:  #pragma omp atomic
testsuite/libgomp.c++/ctor-11.C:43:  #pragma omp atomic
testsuite/libgomp.c++/ctor-11.C:50:  #pragma omp atomic
testsuite/libgomp.c++/ctor-11.C:60:  #pragma omp parallel private (b)
testsuite/libgomp.c++/ctor-11.C:62:      #pragma omp master
testsuite/libgomp.c++/ctor-11.C:72:  #pragma omp parallel firstprivate (b)
testsuite/libgomp.c++/ctor-11.C:74:      #pragma omp single
testsuite/libgomp.c++/loop-12.C:16:#pragma omp atomic
testsuite/libgomp.c++/loop-12.C:34:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-12.C:38:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:46:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:54:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:60:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:66:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:75:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-12.C:102:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-12.C:106:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:114:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:122:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:128:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:134:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:143:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-12.C:170:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-12.C:174:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:182:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:190:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:196:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:202:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:211:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-12.C:238:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-12.C:242:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:250:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:258:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:264:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:270:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:279:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-12.C:306:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-12.C:310:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-12.C:318:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-12.C:326:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-12.C:332:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-12.C:338:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-12.C:347:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/ctor-3.C:30:  #pragma omp atomic
testsuite/libgomp.c++/ctor-3.C:41:  #pragma omp atomic
testsuite/libgomp.c++/ctor-3.C:49:  #pragma omp atomic
testsuite/libgomp.c++/ctor-3.C:56:  #pragma omp critical
testsuite/libgomp.c++/ctor-3.C:69:  #pragma omp parallel sections lastprivate(b)
testsuite/libgomp.c++/ctor-3.C:71:    #pragma omp section
testsuite/libgomp.c++/ctor-3.C:73:    #pragma omp section
testsuite/libgomp.c++/simd-4.C:14:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-4.C:15:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-4.C:16:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c++/simd-4.C:23:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u)
testsuite/libgomp.c++/loop-4.C:9:#pragma omp parallel for firstprivate (a) lastprivate (a) \
testsuite/libgomp.c++/ctor-6.C:21:  #pragma omp atomic
testsuite/libgomp.c++/ctor-6.C:30:  #pragma omp parallel
testsuite/libgomp.c++/ctor-6.C:33:      #pragma omp single copyprivate(b)
testsuite/libgomp.c++/pr56217.C:22:  #pragma omp task shared (pt)
testsuite/libgomp.c++/pr56217.C:24:  #pragma omp taskwait
testsuite/libgomp.c++/pr56217.C:32:  #pragma omp parallel
testsuite/libgomp.c++/pr56217.C:33:  #pragma omp single
testsuite/libgomp.c++/shared-2.C:13:  #pragma omp parallel firstprivate (a,b) shared (bad) num_threads (5)
testsuite/libgomp.c++/shared-2.C:18:      #pragma omp for lastprivate (LASTPRIV)
testsuite/libgomp.c++/shared-2.C:22:      #pragma omp sections lastprivate (LASTPRIV_SEC)
testsuite/libgomp.c++/shared-2.C:24:      #pragma omp section
testsuite/libgomp.c++/shared-2.C:27:      #pragma omp section
testsuite/libgomp.c++/ctor-4.C:36:  #pragma omp atomic
testsuite/libgomp.c++/ctor-4.C:42:  #pragma omp atomic
testsuite/libgomp.c++/ctor-4.C:50:  #pragma omp atomic
testsuite/libgomp.c++/ctor-4.C:57:  #pragma omp critical
testsuite/libgomp.c++/ctor-4.C:70:  #pragma omp parallel sections firstprivate(b) lastprivate(b)
testsuite/libgomp.c++/ctor-4.C:72:    #pragma omp section
testsuite/libgomp.c++/ctor-4.C:74:    #pragma omp section
testsuite/libgomp.c++/task-2.C:13:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c++/task-2.C:15:    #pragma omp critical
testsuite/libgomp.c++/task-2.C:22:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c++/task-2.C:24:    #pragma omp critical
testsuite/libgomp.c++/task-2.C:31:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c++/task-2.C:33:    #pragma omp critical
testsuite/libgomp.c++/task-2.C:40:  #pragma omp task firstprivate (i) shared (j, l)
testsuite/libgomp.c++/task-2.C:42:    #pragma omp critical
testsuite/libgomp.c++/task-2.C:49:  #pragma omp taskwait
testsuite/libgomp.c++/task-2.C:59:  #pragma omp parallel num_threads (4) reduction(+:r)
testsuite/libgomp.c++/task-2.C:62:      #pragma omp master
testsuite/libgomp.c++/target-2.C:36:  #pragma omp target map(to: br[:x], cr[0:x], dr[x:x], er[x:x]) \
testsuite/libgomp.c++/target-2.C:38:    #pragma omp parallel for reduction(+:s)
testsuite/libgomp.c++/ctor-10.C:19:#pragma omp threadprivate(threadbase)
testsuite/libgomp.c++/ctor-10.C:55:  #pragma omp parallel firstprivate(b)
testsuite/libgomp.c++/cancel-taskgroup-3.C:12:  #pragma omp parallel private (c, d) firstprivate (e, f)
testsuite/libgomp.c++/cancel-taskgroup-3.C:13:  #pragma omp taskgroup
testsuite/libgomp.c++/cancel-taskgroup-3.C:17:    #pragma omp task firstprivate (b, f) private (d)
testsuite/libgomp.c++/cancel-taskgroup-3.C:23:      #pragma omp cancel taskgroup
testsuite/libgomp.c++/cancel-taskgroup-3.C:28:  #pragma omp parallel private (c, d) firstprivate (e, f)
testsuite/libgomp.c++/cancel-taskgroup-3.C:30:    #pragma omp barrier
testsuite/libgomp.c++/cancel-taskgroup-3.C:31:    #pragma omp single
testsuite/libgomp.c++/cancel-taskgroup-3.C:32:    #pragma omp taskgroup
testsuite/libgomp.c++/cancel-taskgroup-3.C:38:  #pragma omp task firstprivate (b, f) private (d)
testsuite/libgomp.c++/cancel-taskgroup-3.C:44:    #pragma omp cancellation point taskgroup
testsuite/libgomp.c++/cancel-taskgroup-3.C:46:    #pragma omp cancel taskgroup if (i > 5)
testsuite/libgomp.c++/pr24455-1.C:4:#pragma omp threadprivate (i)
testsuite/libgomp.c++/simd-5.C:14:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-5.C:15:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-5.C:16:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c++/simd-5.C:23:  #pragma omp simd aligned(a : 32) reduction(+:s, q) reduction(foo:t, u) \
testsuite/libgomp.c++/collapse-2.C:97:#pragma omp parallel shared (i, j, k, l) firstprivate (f) \
testsuite/libgomp.c++/collapse-2.C:100:  #pragma omp for lastprivate (i, j, k, l) schedule (static, 9) \
testsuite/libgomp.c++/collapse-2.C:122:#pragma omp parallel for firstprivate (f) reduction (+:n, m) \
testsuite/libgomp.c++/collapse-2.C:147:#pragma omp parallel shared (i, j, k, l) firstprivate (f) \
testsuite/libgomp.c++/collapse-2.C:150:  #pragma omp for lastprivate (i, j, k, l) schedule (static, 9) \
testsuite/libgomp.c++/collapse-2.C:173:#pragma omp parallel for firstprivate (f) reduction (+:n, m) \
testsuite/libgomp.c++/collapse-2.C:199:#pragma omp parallel shared (i, j, k) firstprivate (f) \
testsuite/libgomp.c++/collapse-2.C:202:  #pragma omp for lastprivate (i, j, k) schedule (static, 9) \
testsuite/libgomp.c++/collapse-2.C:226:#pragma omp parallel for firstprivate (f) reduction (+:n, m) \
testsuite/libgomp.c++/collapse-2.C:252:#pragma omp parallel shared (i, j, k, l) firstprivate (f) \
testsuite/libgomp.c++/collapse-2.C:255:  #pragma omp for lastprivate (i, j, k, l) schedule (static, 9) \
testsuite/libgomp.c++/collapse-2.C:278:#pragma omp parallel for firstprivate (f) reduction (+:n, m) \
testsuite/libgomp.c++/collapse-2.C:303:#pragma omp parallel shared (i, j, k, l) firstprivate (f) \
testsuite/libgomp.c++/collapse-2.C:306:  #pragma omp for lastprivate (i, j, k, l) schedule (static, 9) \
testsuite/libgomp.c++/collapse-2.C:329:#pragma omp parallel for firstprivate (f) reduction (+:n, m) \
testsuite/libgomp.c++/atomic-3.C:9:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:13:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:17:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-3.C:21:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-3.C:25:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:29:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:38:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-3.C:40:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-3.C:42:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:46:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:50:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-3.C:52:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-3.C:54:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:58:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-3.C:67:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-3.C:69:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-12.C:17:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-12.C:19:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-12.C:23:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-12.C:27:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-12.C:31:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-12.C:37:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-12.C:41:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-12.C:47:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-12.C:53:  #pragma omp atomic read
testsuite/libgomp.c++/for-5.C:104:#pragma omp parallel shared (i)
testsuite/libgomp.c++/for-5.C:106:  #pragma omp for lastprivate (i) schedule(runtime)
testsuite/libgomp.c++/for-5.C:109:  #pragma omp single
testsuite/libgomp.c++/for-5.C:119:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:130:#pragma omp parallel
testsuite/libgomp.c++/for-5.C:131:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/for-5.C:142:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:153:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:164:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:174:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:185:#pragma omp parallel shared (i)
testsuite/libgomp.c++/for-5.C:186:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/for-5.C:198:#pragma omp parallel for lastprivate (i9)
testsuite/libgomp.c++/for-5.C:209:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/for-5.C:219:#pragma omp parallel
testsuite/libgomp.c++/for-5.C:220:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/for-5.C:231:#pragma omp parallel for lastprivate (i)
testsuite/libgomp.c++/reduction-1.C:9:#pragma omp parallel num_threads(4) reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c++/reduction-1.C:12:#pragma omp atomic
testsuite/libgomp.c++/reduction-1.C:16:#pragma omp atomic
testsuite/libgomp.c++/simd-9.C:8:#pragma omp declare reduction (foo:int:omp_out += omp_in) \
testsuite/libgomp.c++/simd-9.C:15:  #pragma omp simd aligned(a : 32) reduction(foo:u) reduction(+:v)
testsuite/libgomp.c++/simd-9.C:28:  #pragma omp simd aligned(a : 32) reduction(foo:u) reduction(+:v) \
testsuite/libgomp.c++/atomic-4.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:16:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-4.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:22:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-4.C:24:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:28:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:32:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:36:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:40:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:44:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:48:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:52:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:59:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:63:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:67:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:71:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:78:#pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:81:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:85:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:89:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:93:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:100:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:103:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:107:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-4.C:109:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:113:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-4.C:115:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:119:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:123:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:127:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:131:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:135:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:139:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:143:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-4.C:147:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-4.C:151:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:14:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-7.C:18:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-7.C:20:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-7.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:24:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:28:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:33:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:40:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-7.C:45:  #pragma omp atomic capture
testsuite/libgomp.c++/pr24455.C:9:#pragma omp threadprivate(i)
testsuite/libgomp.c++/pr24455.C:15:#pragma omp parallel default(none) num_threads(10) copyin(i)
testsuite/libgomp.c++/pr24455.C:18:#pragma omp barrier
testsuite/libgomp.c++/cancel-sections-1.C:12:  #pragma omp parallel num_threads (32)
testsuite/libgomp.c++/cancel-sections-1.C:15:    #pragma omp sections
testsuite/libgomp.c++/cancel-sections-1.C:19:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:22:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:25:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:28:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:31:     #pragma omp cancel sections
testsuite/libgomp.c++/cancel-sections-1.C:34:      #pragma omp section
testsuite/libgomp.c++/cancel-sections-1.C:37:     #pragma omp cancel sections
testsuite/libgomp.c++/task-7.C:15:  #pragma omp task firstprivate (a)
testsuite/libgomp.c++/loop-9.C:16:#pragma omp atomic
testsuite/libgomp.c++/loop-9.C:34:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:38:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:46:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:54:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:60:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:66:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:75:    #pragma omp for schedule(dynamic,1) nowait
testsuite/libgomp.c++/loop-9.C:102:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:106:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:114:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:122:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:128:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:134:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:143:    #pragma omp for schedule(guided,1) nowait
testsuite/libgomp.c++/loop-9.C:170:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:174:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:182:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:190:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:196:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:202:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:211:    #pragma omp for schedule(static) nowait
testsuite/libgomp.c++/loop-9.C:238:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:242:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:250:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:258:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:264:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:270:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:279:    #pragma omp for schedule(static,1) nowait
testsuite/libgomp.c++/loop-9.C:306:#pragma omp parallel reduction(+:e)
testsuite/libgomp.c++/loop-9.C:310:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:318:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:326:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:332:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:338:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/loop-9.C:347:    #pragma omp for schedule(runtime) nowait
testsuite/libgomp.c++/udr-3.C:23:    #pragma omp declare reduction (foo : U<0>, S : omp_out.foo (omp_in, false))
testsuite/libgomp.c++/udr-3.C:24:    #pragma omp declare reduction (foo : int : omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:26:    #pragma omp declare reduction (foo : double : omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:35:      #pragma omp parallel num_threads (4) reduction (foo : s, v, d) \
testsuite/libgomp.c++/udr-3.C:53:  #pragma omp declare reduction (bar : S<1> : omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-3.C:74:    #pragma omp parallel num_threads (4) reduction (foo:s) \
testsuite/libgomp.c++/udr-3.C:95:  #pragma omp declare reduction (baz: T: omp_out.s += omp_in.s) \
testsuite/libgomp.c++/udr-3.C:97:  #pragma omp declare reduction (baz: D: omp_out += omp_in) \
testsuite/libgomp.c++/udr-3.C:107:    #pragma omp declare reduction (+ : V, W : omp_out.v -= omp_in.v) \
testsuite/libgomp.c++/udr-3.C:110:      #pragma omp declare reduction (+ : W, V : omp_out.v += omp_in.v) \
testsuite/libgomp.c++/udr-3.C:112:      #pragma omp parallel num_threads (4) reduction (+: v, q) \
testsuite/libgomp.c++/udr-3.C:140:  #pragma omp parallel num_threads (4) reduction (bar:s) reduction (+:q)
testsuite/libgomp.c++/copyin-2.C:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c++/copyin-2.C:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c++/copyin-2.C:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c++/for-1.C:103:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:112:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-1.C:121:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:131:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-1.C:139:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:148:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:160:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:170:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:179:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:189:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:198:#pragma omp parallel
testsuite/libgomp.c++/for-1.C:200:#pragma omp for nowait
testsuite/libgomp.c++/for-1.C:203:#pragma omp single
testsuite/libgomp.c++/for-1.C:216:#pragma omp parallel for
testsuite/libgomp.c++/for-1.C:228:#pragma omp parallel for
testsuite/libgomp.c++/task-6.C:10:#pragma omp task private(j, m) shared(k, n)
testsuite/libgomp.c++/task-6.C:15:      #pragma omp atomic
testsuite/libgomp.c++/task-6.C:18:#pragma omp taskwait
testsuite/libgomp.c++/task-6.C:31:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c++/task-6.C:33:  #pragma omp section
testsuite/libgomp.c++/task-6.C:37:      #pragma omp task
testsuite/libgomp.c++/task-6.C:42:      #pragma omp taskwait
testsuite/libgomp.c++/task-6.C:56:#pragma omp task private(j, m) shared(k, n) untied
testsuite/libgomp.c++/task-6.C:61:      #pragma omp atomic
testsuite/libgomp.c++/task-6.C:64:#pragma omp taskwait
testsuite/libgomp.c++/task-6.C:77:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/task-6.C:79:    #pragma omp master
testsuite/libgomp.c++/loop-6.C:15:  #pragma omp for lastprivate (i)
testsuite/libgomp.c++/pr30703.C:20:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:27:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:33:#pragma omp atomic
testsuite/libgomp.c++/pr30703.C:41:#pragma omp parallel for firstprivate (a) lastprivate (a) private (b) schedule (static, 1) num_threads (5)
testsuite/libgomp.c++/pr30703.C:46:     #pragma omp atomic
testsuite/libgomp.c++/task-8.C:12:#pragma omp parallel shared(errval)
testsuite/libgomp.c++/task-8.C:15:      #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:17:    #pragma omp task if (0) shared(errval)
testsuite/libgomp.c++/task-8.C:20:        #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:22:      #pragma omp task if (0) shared(errval)
testsuite/libgomp.c++/task-8.C:24:          #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:27:    #pragma omp task final (1) shared(errval)
testsuite/libgomp.c++/task-8.C:30:        #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:32:      #pragma omp taskyield
testsuite/libgomp.c++/task-8.C:33:      #pragma omp taskwait
testsuite/libgomp.c++/task-8.C:34:      #pragma omp task shared(errval)
testsuite/libgomp.c++/task-8.C:36:          #pragma omp atomic write
testsuite/libgomp.c++/task-8.C:40:  #pragma omp atomic read
testsuite/libgomp.c++/udr-1.C:31:#pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-1.C:33:#pragma omp declare reduction (foo: char, int, short: omp_out += omp_in - 4) \
testsuite/libgomp.c++/udr-1.C:35:#pragma omp declare reduction (+: S: omp_out.foo (omp_in, false)) \
testsuite/libgomp.c++/udr-1.C:40:  #pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-1.C:53:  #pragma omp declare reduction (foo: S: omp_out.foo (omp_in, true)) \
testsuite/libgomp.c++/udr-1.C:56:    #pragma omp declare reduction (foo: S: omp_out.foo (omp_in, false)) \
testsuite/libgomp.c++/udr-1.C:58:    #pragma omp parallel num_threads (4) reduction (N::operator +: q) \
testsuite/libgomp.c++/ctor-1.C:25:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:31:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:37:  #pragma omp atomic
testsuite/libgomp.c++/ctor-1.C:46:  #pragma omp parallel private(b)
testsuite/libgomp.c++/ctor-1.C:48:      #pragma omp master
testsuite/libgomp.c++/sections-1.C:25:#pragma omp parallel shared(a,b,nthreads) private(c,i,tid)
testsuite/libgomp.c++/sections-1.C:35:  #pragma omp sections nowait
testsuite/libgomp.c++/sections-1.C:37:    #pragma omp section
testsuite/libgomp.c++/sections-1.C:47:    #pragma omp section
testsuite/libgomp.c++/task-1.C:9:#pragma omp task private(j, m) shared(k, n)
testsuite/libgomp.c++/task-1.C:14:      #pragma omp atomic
testsuite/libgomp.c++/task-1.C:17:#pragma omp taskwait
testsuite/libgomp.c++/task-1.C:29:#pragma omp sections private (v1) firstprivate (v2)
testsuite/libgomp.c++/task-1.C:31:  #pragma omp section
testsuite/libgomp.c++/task-1.C:35:      #pragma omp task
testsuite/libgomp.c++/task-1.C:40:      #pragma omp taskwait
testsuite/libgomp.c++/task-1.C:53:#pragma omp task private(j, m) shared(k, n) untied
testsuite/libgomp.c++/task-1.C:58:      #pragma omp atomic
testsuite/libgomp.c++/task-1.C:61:#pragma omp taskwait
testsuite/libgomp.c++/task-1.C:74:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/task-1.C:76:    #pragma omp master
testsuite/libgomp.c++/for-7.C:21:#pragma omp atomic
testsuite/libgomp.c++/for-7.C:31:#pragma omp atomic
testsuite/libgomp.c++/for-7.C:39:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:48:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:56:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:67:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:76:#pragma omp parallel for
testsuite/libgomp.c++/for-7.C:84:#pragma omp parallel for
testsuite/libgomp.c++/collapse-1.C:13:  #pragma omp parallel for collapse(4 - 1) schedule(static, 4)
testsuite/libgomp.c++/collapse-1.C:18:  #pragma omp parallel
testsuite/libgomp.c++/collapse-1.C:20:      #pragma omp for collapse(2) reduction(|:l) private (k)
testsuite/libgomp.c++/reduction-2.C:9:#pragma omp parallel num_threads(4)
testsuite/libgomp.c++/reduction-2.C:11:#pragma omp single
testsuite/libgomp.c++/reduction-2.C:18:#pragma omp for reduction(+:i) reduction(*:d) reduction(&:k)
testsuite/libgomp.c++/reduction-2.C:22:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:36:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:39:#pragma omp atomic
testsuite/libgomp.c++/reduction-2.C:42:#pragma omp atomic
testsuite/libgomp.c++/ctor-9.C:18:#pragma omp threadprivate(threadbase)
testsuite/libgomp.c++/ctor-9.C:34:  #pragma omp parallel
testsuite/libgomp.c++/ctor-9.C:38:      #pragma omp single copyprivate(b)
testsuite/libgomp.c++/atomic-10.C:10:  #pragma omp atomic
testsuite/libgomp.c++/atomic-10.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:16:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-10.C:18:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:26:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:30:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:34:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:38:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:42:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:46:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:50:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:54:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:58:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:62:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:66:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:70:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:74:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:78:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:82:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-10.C:86:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:90:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-10.C:94:  #pragma omp atomic read
testsuite/libgomp.c++/cancel-for-2.C:12:  #pragma omp parallel num_threads (32) shared (v, w) private (c, d) firstprivate (e)
testsuite/libgomp.c++/cancel-for-2.C:18:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:24:        #pragma omp cancel for if (x[0])
testsuite/libgomp.c++/cancel-for-2.C:27:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:33:        #pragma omp cancel for if (x[1])
testsuite/libgomp.c++/cancel-for-2.C:34:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:37:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:43:        #pragma omp cancel for if (x[2])
testsuite/libgomp.c++/cancel-for-2.C:44:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:47:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:53:        #pragma omp cancel for if (x[3])
testsuite/libgomp.c++/cancel-for-2.C:54:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:60:  #pragma omp parallel num_threads (32) shared (v, w) private (c, d) firstprivate (e)
testsuite/libgomp.c++/cancel-for-2.C:69:    #pragma omp cancel parallel if (omp_get_thread_num () == 1 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:70:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:76:        #pragma omp cancel for if (x[0])
testsuite/libgomp.c++/cancel-for-2.C:79:    #pragma omp cancel parallel if (omp_get_thread_num () == 2 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:80:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:86:        #pragma omp cancel for if (x[1])
testsuite/libgomp.c++/cancel-for-2.C:87:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:90:    #pragma omp cancel parallel if (omp_get_thread_num () == 3 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:91:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:97:        #pragma omp cancel for if (x[2])
testsuite/libgomp.c++/cancel-for-2.C:98:        #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:101:    #pragma omp cancel parallel if (omp_get_thread_num () == 4 && x[4])
testsuite/libgomp.c++/cancel-for-2.C:102:    #pragma omp for private (d, g) firstprivate (b)
testsuite/libgomp.c++/cancel-for-2.C:108:       #pragma omp cancel for if (x[3])
testsuite/libgomp.c++/cancel-for-2.C:109:       #pragma omp atomic
testsuite/libgomp.c++/cancel-for-2.C:112:    #pragma omp cancel parallel if (omp_get_thread_num () == 5 && x[4])
testsuite/libgomp.c++/ctor-8.C:24:#pragma omp threadprivate(threadbase)
testsuite/libgomp.c++/ctor-8.C:54:  #pragma omp parallel firstprivate(b)
testsuite/libgomp.c++/udr-6.C:14:#pragma omp declare reduction (+:B:omp_out.b += omp_in.b) \
testsuite/libgomp.c++/udr-6.C:36:  #pragma omp declare reduction (+:A:bar (omp_out, omp_in, 0))
testsuite/libgomp.c++/udr-6.C:41:  #pragma omp declare reduction (+:N1::A:bar (omp_out, omp_in, 1))
testsuite/libgomp.c++/udr-6.C:49:  #pragma omp parallel reduction(+:g, i)
testsuite/libgomp.c++/udr-6.C:59:  #pragma omp parallel reduction (+:b, i)
testsuite/libgomp.c++/simd-8.C:15:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-8.C:16:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s)
testsuite/libgomp.c++/simd-8.C:17:#pragma omp declare reduction (foo:int:omp_out += omp_in)
testsuite/libgomp.c++/simd-8.C:24:  #pragma omp parallel for simd aligned(a : 32) reduction(+:s) \
testsuite/libgomp.c++/task-3.C:23:    #pragma omp atomic
testsuite/libgomp.c++/task-3.C:36:    #pragma omp atomic
testsuite/libgomp.c++/task-3.C:48:  #pragma omp task firstprivate (i, a, j, b)
testsuite/libgomp.c++/task-3.C:56:  #pragma omp task firstprivate (i, a, j, b)
testsuite/libgomp.c++/task-3.C:66:  #pragma omp task firstprivate (a, c)
testsuite/libgomp.c++/task-3.C:78:  #pragma omp parallel num_threads (4)
testsuite/libgomp.c++/task-3.C:80:      #pragma omp single
testsuite/libgomp.c++/loop-1.C:24:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:26:#pragma omp for
testsuite/libgomp.c++/loop-1.C:40:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:42:#pragma omp for
testsuite/libgomp.c++/loop-1.C:56:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:58:#pragma omp for
testsuite/libgomp.c++/loop-1.C:72:#pragma omp parallel shared(a,b,N1,N2,step) private(i)
testsuite/libgomp.c++/loop-1.C:74:#pragma omp for
testsuite/libgomp.c++/atomic-6.C:10:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-6.C:12:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-6.C:16:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-6.C:18:  #pragma omp atomic write
testsuite/libgomp.c++/atomic-6.C:20:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:22:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:26:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:31:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:38:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-6.C:43:  #pragma omp atomic capture
testsuite/libgomp.c++/udr-7.C:22:#pragma omp declare reduction (foo: S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-7.C:24:#pragma omp declare reduction (bar : S: omp_out.foo (omp_in)) \
testsuite/libgomp.c++/udr-7.C:34:  #pragma omp parallel reduction (foo: x) reduction (bar: r) \
testsuite/libgomp.c++/udr-7.C:52:  #pragma omp parallel reduction (foo: x) reduction (bar: y) \
testsuite/libgomp.c++/pr34513.C:16:  #pragma omp parallel num_threads (thrs)
testsuite/libgomp.c++/pr34513.C:20:    #pragma omp atomic
testsuite/libgomp.c++/pr34513.C:23:    #pragma omp barrier
testsuite/libgomp.c++/pr34513.C:26:      #pragma omp atomic
testsuite/libgomp.c++/pr27337.C:21:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:28:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:38:#pragma omp atomic
testsuite/libgomp.c++/pr27337.C:48:#pragma omp parallel for firstprivate (ret) lastprivate (ret) \
testsuite/libgomp.c++/pr27337.C:62:#pragma omp parallel for num_threads (4)
testsuite/libgomp.c++/pr27337.C:64:#pragma omp atomic
testsuite/libgomp.c++/loop-3.C:9:#pragma omp barrier
testsuite/libgomp.c++/loop-3.C:10:#pragma omp for lastprivate (a)
testsuite/libgomp.c++/loop-3.C:22:#pragma omp parallel num_threads (64)
testsuite/libgomp.c++/ctor-7.C:27:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:33:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:39:  #pragma omp atomic
testsuite/libgomp.c++/ctor-7.C:48:  #pragma omp parallel private(b)
testsuite/libgomp.c++/ctor-7.C:50:      #pragma omp master
testsuite/libgomp.c++/tls-init1.C:12:#pragma omp threadprivate (a)
testsuite/libgomp.c++/loop-2.C:13:#pragma omp for
testsuite/libgomp.c++/loop-2.C:22:#pragma omp parallel shared(a)
testsuite/libgomp.c++/simd-2.C:13:  #pragma omp simd private (v) safelen(16)
testsuite/libgomp.c++/loop-7.C:10:#pragma omp for
testsuite/libgomp.c++/copyin-1.C:9:#pragma omp threadprivate (thr)
testsuite/libgomp.c++/copyin-1.C:19:#pragma omp parallel copyin (thr) reduction (||:l)
testsuite/libgomp.c++/copyin-1.C:28:#pragma omp parallel reduction (||:l)
testsuite/libgomp.c++/master-1.C:10:  #pragma omp parallel
testsuite/libgomp.c++/master-1.C:12:    #pragma omp master
testsuite/libgomp.c++/simd-7.C:15:#pragma omp declare reduction (+:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-7.C:17:#pragma omp declare reduction (foo:S:omp_out.s += omp_in.s) \
testsuite/libgomp.c++/simd-7.C:19:#pragma omp declare reduction (foo:int:omp_out += omp_in) \
testsuite/libgomp.c++/simd-7.C:27:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u) \
testsuite/libgomp.c++/simd-7.C:45:  #pragma omp simd aligned(a : 32) reduction(+:s) reduction(foo:t, u) \
testsuite/libgomp.c++/for-8.C:103:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:112:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-8.C:121:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:131:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-8.C:139:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:148:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:160:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:170:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:179:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:189:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:198:#pragma omp parallel
testsuite/libgomp.c++/for-8.C:200:#pragma omp for nowait
testsuite/libgomp.c++/for-8.C:203:#pragma omp single
testsuite/libgomp.c++/for-8.C:216:#pragma omp parallel for
testsuite/libgomp.c++/for-8.C:228:#pragma omp parallel for
testsuite/libgomp.c++/pr38650.C:13:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:19:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:25:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:31:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:37:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/pr38650.C:43:#pragma omp parallel for reduction(+:e)
testsuite/libgomp.c++/loop-8.C:11:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:18:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:25:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:32:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:39:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:46:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:53:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:60:#pragma omp parallel for
testsuite/libgomp.c++/loop-8.C:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-8.C:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-8.C:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-8.C:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/single-1.C:7:  #pragma omp parallel shared (i)
testsuite/libgomp.c++/single-1.C:9:      #pragma omp single
testsuite/libgomp.c++/atomic-1.C:12:  #pragma omp atomic
testsuite/libgomp.c++/atomic-1.C:19:  #pragma omp atomic
testsuite/libgomp.c++/atomic-1.C:26:  #pragma omp atomic
testsuite/libgomp.c++/atomic-14.C:10:  #pragma omp atomic seq_cst
testsuite/libgomp.c++/atomic-14.C:12:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:16:  #pragma omp atomic seq_cst update
testsuite/libgomp.c++/atomic-14.C:18:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-14.C:22:  #pragma omp atomic seq_cst, capture
testsuite/libgomp.c++/atomic-14.C:26:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:30:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:34:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-14.C:38:  #pragma omp atomic seq_cst read
testsuite/libgomp.c++/atomic-14.C:42:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:46:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:50:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:54:  #pragma omp atomic capture, seq_cst
testsuite/libgomp.c++/atomic-14.C:58:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:62:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:66:  #pragma omp atomic read, seq_cst
testsuite/libgomp.c++/atomic-14.C:70:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:74:  #pragma omp atomic seq_cst, read
testsuite/libgomp.c++/atomic-14.C:78:  #pragma omp atomic capture , seq_cst
testsuite/libgomp.c++/atomic-14.C:82:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/atomic-14.C:86:  #pragma omp atomic seq_cst capture
testsuite/libgomp.c++/atomic-14.C:90:  #pragma omp atomic capture seq_cst
testsuite/libgomp.c++/atomic-14.C:94:  #pragma omp atomic read seq_cst
testsuite/libgomp.c++/pr48869.C:26:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:34:  #pragma omp task shared(a0)
testsuite/libgomp.c++/pr48869.C:36:  #pragma omp task default(shared)
testsuite/libgomp.c++/pr48869.C:38:  #pragma omp parallel shared(a0)
testsuite/libgomp.c++/pr48869.C:39:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:41:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:47:  #pragma omp task shared(b0)
testsuite/libgomp.c++/pr48869.C:50:  #pragma omp task default(shared)
testsuite/libgomp.c++/pr48869.C:53:  #pragma omp parallel shared(b2)
testsuite/libgomp.c++/pr48869.C:54:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:57:  #pragma omp task
testsuite/libgomp.c++/pr48869.C:60:  #pragma omp parallel private (b4)
testsuite/libgomp.c++/pr48869.C:61:    #pragma omp task
testsuite/libgomp.c++/pr48869.C:64:  #pragma omp parallel firstprivate (b5)
testsuite/libgomp.c++/pr48869.C:65:    #pragma omp task
testsuite/libgomp.c++/pr39573.C:9:  #pragma omp atomic
testsuite/libgomp.c++/pr39573.C:18:#pragma omp parallel for
testsuite/libgomp.c++/simd-1.C:41:  #pragma omp simd aligned(a, p : 32) linear(k: m + 1) \
testsuite/libgomp.c++/for-2.C:32:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:41:#pragma omp parallel for private(i)
testsuite/libgomp.c++/for-2.C:50:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:60:#pragma omp parallel for lastprivate(i)
testsuite/libgomp.c++/for-2.C:68:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:77:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:86:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:96:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:105:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:115:#pragma omp parallel for
testsuite/libgomp.c++/for-2.C:124:#pragma omp parallel
testsuite/libgomp.c++/for-2.C:126:#pragma omp for nowait
testsuite/libgomp.c++/for-2.C:129:#pragma omp single
testsuite/libgomp.c++/for-2.C:139:#pragma omp parallel for
testsuite/libgomp.c++/atomic-13.C:19:  #pragma omp atomic update
testsuite/libgomp.c++/atomic-13.C:21:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-13.C:25:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:29:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:33:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:39:  #pragma omp atomic read
testsuite/libgomp.c++/atomic-13.C:43:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:49:  #pragma omp atomic capture
testsuite/libgomp.c++/atomic-13.C:55:  #pragma omp atomic read
testsuite/libgomp.c++/loop-11.C:11:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:18:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:25:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:32:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:39:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:46:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:53:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:60:#pragma omp parallel for
testsuite/libgomp.c++/loop-11.C:75:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:82:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:89:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:96:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:103:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:110:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:117:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:124:#pragma omp parallel for schedule (static, 3)
testsuite/libgomp.c++/loop-11.C:139:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:146:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:153:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:160:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:167:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:174:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:181:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:188:#pragma omp parallel for schedule (dynamic, 3)
testsuite/libgomp.c++/loop-11.C:203:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:210:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:217:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:224:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:231:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:238:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:245:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/loop-11.C:252:#pragma omp parallel for schedule (runtime)
testsuite/libgomp.c++/pr35185.C:25:#pragma omp parallel shared (s)
testsuite/libgomp.c++/pr35185.C:28:      #pragma omp atomic
examples/pedro-test.c:18: *   #pragma omp paralell for tasks(myarray, ntasks)
examples/pedro-test.c:37:       #pragma omp parallel num_threads(2)
examples/pedro-test.c:44:               #pragma omp for schedule(runtime)
libgomp.texi:110:@code{#pragma omp} in C/C++ and @code{!$omp} directives in free form,
libgomp.texi:1819:#pragma omp for firstprivate(x) lastprivate(y)
libgomp.texi:1861:  #pragma omp parallel
libgomp.texi:1912:  #pragma omp parallel for
libgomp.texi:1938:  #pragma omp for schedule(runtime)
libgomp.texi:1993:  #pragma omp sections
libgomp.texi:1995:    #pragma omp section
libgomp.texi:1997:    #pragma omp section
libgomp.texi:1999:    #pragma omp section
libgomp.texi:2030:  #pragma omp single
libgomp.texi:2047:  #pragma omp single copyprivate(x)
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ grep -rn 'pragma' | grep -v 'testsuite'
build/libtool:3066:#pragma GCC diagnostic ignored \"-Wstrict-prototypes\"
build/libgomp.info:90:directive '#pragma omp' in C/C++ and '!$omp' directives in free form,
build/libgomp.info:1630:     #pragma omp for firstprivate(x) lastprivate(y)
build/libgomp.info:1671:       #pragma omp parallel
build/libgomp.info:1715:       #pragma omp parallel for
build/libgomp.info:1737:       #pragma omp for schedule(runtime)
build/libgomp.info:1788:       #pragma omp sections
build/libgomp.info:1790:         #pragma omp section
build/libgomp.info:1792:         #pragma omp section
build/libgomp.info:1794:         #pragma omp section
build/libgomp.info:1823:       #pragma omp single
build/libgomp.info:1836:       #pragma omp single copyprivate(x)
libgomp.h:45:# pragma GCC visibility push(hidden)
libgomp.h:654:# pragma GCC visibility pop
critical.c:119:   long as all parallel references are within #pragma omp atomic directives.
ChangeLog:110:  #pragma omp for simd testing.
ChangeLog:119:  #pragma omp for simd testing.
ChangeLog:3979: Use pragma GCC visibility instead of ATTRIBUTE_HIDDEN.
team.c:848:     As #pragma omp cancel parallel might get awaited count in
config/linux/wait.h:40:# pragma GCC visibility push(hidden)
config/linux/wait.h:68:# pragma GCC visibility pop
config/linux/futex.h:33:#pragma GCC visibility push(default)
config/linux/futex.h:39:#pragma GCC visibility pop
config/posix/sem.h:37:# pragma GCC visibility push(default)
config/posix/sem.h:43:# pragma GCC visibility pop
parallel.c:190:  as #pragma omp cancel parallel also cancels all explicit
examples/pedro-test.c:18: *   #pragma omp paralell for tasks(myarray, ntasks)
examples/pedro-test.c:37:       #pragma omp parallel num_threads(2)
examples/pedro-test.c:44:               #pragma omp for schedule(runtime)
libgomp.texi:110:@code{#pragma omp} in C/C++ and @code{!$omp} directives in free form,
libgomp.texi:1819:#pragma omp for firstprivate(x) lastprivate(y)
libgomp.texi:1861:  #pragma omp parallel
libgomp.texi:1912:  #pragma omp parallel for
libgomp.texi:1938:  #pragma omp for schedule(runtime)
libgomp.texi:1993:  #pragma omp sections
libgomp.texi:1995:    #pragma omp section
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim env.c ^C
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $
libgomp.texi:2030:  #pragma omp single
libgomp.texi:2047:  #pragma omp single copyprivate(x)
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim te
team.c     testsuite/
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim team.c
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim libg
libgomp_f.h.in   libgomp_g.h      libgomp.h        libgomp.map      libgomp.spec.in  libgomp.texi
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim libgomp.
libgomp.h        libgomp.map      libgomp.spec.in  libgomp.texi
patrick@SiPas-machine ~/Desktop/pedroopenmp/libgomp/src/libgomp $ vim libgomp.h

